{
 "source": "var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\n/**\n * # Nomx\n * The most advanced framework for Applab. Ever.\n * - Build components via class extension as well and native types.\n * - Features an object oriented system that supports JSX syntax and full typescript support.\n * - Built-in html parser and extensive use of getAttribute gives access to previously off limit properties, such as:\n *   * The channelId of the app.\n *   * The children of an element.\n *   * The screens and active screen of a project.\n *   * And more!\n *\n * NOTE: Nomx works best with cdo-sync, in order to provide proper autofills and jsx support.\n *\n *\n * @example //This requires typescript with react syntax\n * //Creates a new class that extends Container (div element). It has a method that adds a message to it.\n * class ChatContainerSingleton extends Nomx.Container {\n * \t\taddMessage(message: string){\n * \t\t\tthis.addChildren(<div>{message}</div>)\n * \t\t}\n * }\n *\n * // Create an instance of ChatContainer with styles, and adds 2 messages to it.\n * const chatContainer = <ChatContainerSingleton style=\"position: absolute; width: 100%; height: 100%; overflow: auto\"/> as ChatContainerSingleton\n * chatContainer.addMessage(\"hi, how are you\");\n * chatContainer.addMessage(\"I'm fine\");\n*/\n//import \"./types/applab\"\nvar Nomx;\n(function (Nomx) {\n    var prefix = \"Nomx_Gen_\";\n    var counter = 0;\n    Nomx.ElementsById = {};\n    ;\n    var parser = (function () {\n        // Regular Expressions for parsing tags and attributes\n        var startTag = /^<([-A-Za-z0-9_]+)((?:\\s+[-A-Z-a-z0-9_]+(?:\\s*=\\s*(?:(?:\"[^\"]*\")|(?:'[^']*')|[^>\\s]+))?)*)\\s*(\\/?)>/, endTag = /^<\\/([-A-Za-z0-9_]+)[^>]*>/, attr = /([-A-Za-z0-9_]+)(?:\\s*=\\s*(?:(?:\"((?:\\\\.|[^\"])*)\")|(?:'((?:\\\\.|[^'])*)')|([^>\\s]+)))?/g, attr2 = /([-A-Za-z0-9_]+)(?:\\s*=\\s*(?:(?:\"((?:\\\\.|[^\"])*)\")|(?:'((?:\\\\.|[^'])*)')|([^>\\s]+)))?/;\n        var empty = makeMap(\"area,base,basefont,br,col,frame,hr,img,input,isindex,link,meta,param,embed\");\n        var closeSelf = makeMap(\"colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr\");\n        function makeMap(str) {\n            var obj = {}, items = str.split(\",\");\n            for (var i = 0; i < items.length; i++)\n                obj[items[i]] = true;\n            return obj;\n        }\n        function parseFragments(html) {\n            var parsedTags = [];\n            while (true) {\n                var match = html.match(startTag);\n                if (match) {\n                    parsedTags.push([match[1], match[2]]);\n                    html = html.substring(match[0].length);\n                }\n                else {\n                    var matchEnd = html.match(endTag);\n                    if (matchEnd) {\n                        parsedTags.push([matchEnd[1]]);\n                        html = html.substring(matchEnd[0].length);\n                    }\n                    else {\n                        var index = html.indexOf(\"<\");\n                        if (index >= 0) {\n                            //parsedTags.push(html.slice(0, index))\n                            html = html.substring(index);\n                        }\n                        else {\n                            break;\n                        }\n                    }\n                }\n            }\n            return parsedTags;\n        }\n        function parse(parsedTags) {\n            var stack = [{ tagName: \"\", attributes: {}, children: [] }];\n            for (var _i = 0, parsedTags_1 = parsedTags; _i < parsedTags_1.length; _i++) {\n                var fragment = parsedTags_1[_i];\n                if (typeof fragment === \"string\") {\n                    //never\n                    //stack[stack.length - 1].children.push(fragment)\n                }\n                else if (fragment.length === 2) {\n                    var node = { tagName: \"\", attributes: {}, children: [] };\n                    node.tagName = fragment[0];\n                    for (var _a = 0, _b = fragment[1].match(attr) || []; _a < _b.length; _a++) {\n                        var attribute = _b[_a];\n                        var attrmatch = attribute.match(attr2);\n                        node.attributes[attrmatch[1]] = attrmatch[2];\n                    }\n                    stack[stack.length - 1].children.push(node);\n                    if (!empty[node.tagName] && !closeSelf[node.tagName]) {\n                        stack.push(node);\n                    }\n                }\n                else {\n                    stack.pop();\n                }\n            }\n            return stack[0].children;\n        }\n        //why the fuck this not working\n        function getIds(parsedTags) {\n            var stack = [];\n            for (var _i = 0, parsedTags_2 = parsedTags; _i < parsedTags_2.length; _i++) {\n                var fragment = parsedTags_2[_i];\n                if (typeof fragment === \"string\") {\n                    //stack[stack.length - 1].children.push(fragment)\n                }\n                else if (fragment.length === 2) {\n                    var node = { tagName: \"\", attributes: {}, children: [] };\n                    node.tagName = fragment[0];\n                    for (var _a = 0, _b = fragment[1].match(attr) || []; _a < _b.length; _a++) {\n                        var attribute = _b[_a];\n                        var attrmatch = attribute.match(attr2);\n                        node.attributes[attrmatch[1]] = attrmatch[2];\n                    }\n                    stack.push(node);\n                }\n            }\n            return stack;\n        }\n        return { nodes: function (html) { return getIds(parseFragments(html)); }, tree: function (html) { return parse(parseFragments(html)); } };\n    })();\n    var StyleDeclaration = /** @class */ (function () {\n        function StyleDeclaration(element) {\n            this._computedStyleObj = {};\n            this.lastStyle = \"\";\n            this.element = element;\n        }\n        Object.defineProperty(StyleDeclaration.prototype, \"additiveSymbols\", {\n            get: function () { return this.get(\"additive-symbols\"); },\n            set: function (v) { this.set(\"additive-symbols: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"alignContent\", {\n            get: function () { return this.get(\"align-content\"); },\n            set: function (v) { this.set(\"align-content: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"alignItems\", {\n            get: function () { return this.get(\"align-items\"); },\n            set: function (v) { this.set(\"align-items: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"alignSelf\", {\n            get: function () { return this.get(\"align-self\"); },\n            set: function (v) { this.set(\"align-self: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"alignmentBaseline\", {\n            get: function () { return this.get(\"alignment-baseline\"); },\n            set: function (v) { this.set(\"alignment-baseline: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"animation\", {\n            get: function () { return this.get(\"animation\"); },\n            set: function (v) { this.set(\"animation: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"animationDelay\", {\n            get: function () { return this.get(\"animation-delay\"); },\n            set: function (v) { this.set(\"animation-delay: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"animationDirection\", {\n            get: function () { return this.get(\"animation-direction\"); },\n            set: function (v) { this.set(\"animation-direction: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"animationDuration\", {\n            get: function () { return this.get(\"animation-duration\"); },\n            set: function (v) { this.set(\"animation-duration: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"animationFillMode\", {\n            get: function () { return this.get(\"animation-fill-mode\"); },\n            set: function (v) { this.set(\"animation-fill-mode: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"animationIterationCount\", {\n            get: function () { return this.get(\"animation-iteration-count\"); },\n            set: function (v) { this.set(\"animation-iteration-count: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"animationName\", {\n            get: function () { return this.get(\"animation-name\"); },\n            set: function (v) { this.set(\"animation-name: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"animationPlayState\", {\n            get: function () { return this.get(\"animation-play-state\"); },\n            set: function (v) { this.set(\"animation-play-state: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"animationTimingFunction\", {\n            get: function () { return this.get(\"animation-timing-function\"); },\n            set: function (v) { this.set(\"animation-timing-function: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"appearance\", {\n            get: function () { return this.get(\"appearance\"); },\n            set: function (v) { this.set(\"appearance: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"ascentOverride\", {\n            get: function () { return this.get(\"ascent-override\"); },\n            set: function (v) { this.set(\"ascent-override: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"aspectRatio\", {\n            get: function () { return this.get(\"aspect-ratio\"); },\n            set: function (v) { this.set(\"aspect-ratio: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"backdropFilter\", {\n            get: function () { return this.get(\"backdrop-filter\"); },\n            set: function (v) { this.set(\"backdrop-filter: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"backfaceVisibility\", {\n            get: function () { return this.get(\"backface-visibility\"); },\n            set: function (v) { this.set(\"backface-visibility: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"background\", {\n            get: function () { return this.get(\"background\"); },\n            set: function (v) { this.set(\"background: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"backgroundAttachment\", {\n            get: function () { return this.get(\"background-attachment\"); },\n            set: function (v) { this.set(\"background-attachment: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"backgroundBlendMode\", {\n            get: function () { return this.get(\"background-blend-mode\"); },\n            set: function (v) { this.set(\"background-blend-mode: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"backgroundClip\", {\n            get: function () { return this.get(\"background-clip\"); },\n            set: function (v) { this.set(\"background-clip: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"backgroundColor\", {\n            get: function () { return this.get(\"background-color\"); },\n            set: function (v) { this.set(\"background-color: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"backgroundImage\", {\n            get: function () { return this.get(\"background-image\"); },\n            set: function (v) { this.set(\"background-image: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"backgroundOrigin\", {\n            get: function () { return this.get(\"background-origin\"); },\n            set: function (v) { this.set(\"background-origin: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"backgroundPosition\", {\n            get: function () { return this.get(\"background-position\"); },\n            set: function (v) { this.set(\"background-position: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"backgroundPositionX\", {\n            get: function () { return this.get(\"background-position-x\"); },\n            set: function (v) { this.set(\"background-position-x: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"backgroundPositionY\", {\n            get: function () { return this.get(\"background-position-y\"); },\n            set: function (v) { this.set(\"background-position-y: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"backgroundRepeat\", {\n            get: function () { return this.get(\"background-repeat\"); },\n            set: function (v) { this.set(\"background-repeat: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"backgroundRepeatX\", {\n            get: function () { return this.get(\"background-repeat-x\"); },\n            set: function (v) { this.set(\"background-repeat-x: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"backgroundRepeatY\", {\n            get: function () { return this.get(\"background-repeat-y\"); },\n            set: function (v) { this.set(\"background-repeat-y: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"backgroundSize\", {\n            get: function () { return this.get(\"background-size\"); },\n            set: function (v) { this.set(\"background-size: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"baselineShift\", {\n            get: function () { return this.get(\"baseline-shift\"); },\n            set: function (v) { this.set(\"baseline-shift: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"blockSize\", {\n            get: function () { return this.get(\"block-size\"); },\n            set: function (v) { this.set(\"block-size: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"border\", {\n            get: function () { return this.get(\"border\"); },\n            set: function (v) { this.set(\"border: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"borderBlock\", {\n            get: function () { return this.get(\"border-block\"); },\n            set: function (v) { this.set(\"border-block: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"borderBlockColor\", {\n            get: function () { return this.get(\"border-block-color\"); },\n            set: function (v) { this.set(\"border-block-color: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"borderBlockEnd\", {\n            get: function () { return this.get(\"border-block-end\"); },\n            set: function (v) { this.set(\"border-block-end: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"borderBlockEndColor\", {\n            get: function () { return this.get(\"border-block-end-color\"); },\n            set: function (v) { this.set(\"border-block-end-color: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"borderBlockEndStyle\", {\n            get: function () { return this.get(\"border-block-end-style\"); },\n            set: function (v) { this.set(\"border-block-end-style: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"borderBlockEndWidth\", {\n            get: function () { return this.get(\"border-block-end-width\"); },\n            set: function (v) { this.set(\"border-block-end-width: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"borderBlockStart\", {\n            get: function () { return this.get(\"border-block-start\"); },\n            set: function (v) { this.set(\"border-block-start: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"borderBlockStartColor\", {\n            get: function () { return this.get(\"border-block-start-color\"); },\n            set: function (v) { this.set(\"border-block-start-color: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"borderBlockStartStyle\", {\n            get: function () { return this.get(\"border-block-start-style\"); },\n            set: function (v) { this.set(\"border-block-start-style: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"borderBlockStartWidth\", {\n            get: function () { return this.get(\"border-block-start-width\"); },\n            set: function (v) { this.set(\"border-block-start-width: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"borderBlockStyle\", {\n            get: function () { return this.get(\"border-block-style\"); },\n            set: function (v) { this.set(\"border-block-style: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"borderBlockWidth\", {\n            get: function () { return this.get(\"border-block-width\"); },\n            set: function (v) { this.set(\"border-block-width: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"borderBottom\", {\n            get: function () { return this.get(\"border-bottom\"); },\n            set: function (v) { this.set(\"border-bottom: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"borderBottomColor\", {\n            get: function () { return this.get(\"border-bottom-color\"); },\n            set: function (v) { this.set(\"border-bottom-color: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"borderBottomLeftRadius\", {\n            get: function () { return this.get(\"border-bottom-left-radius\"); },\n            set: function (v) { this.set(\"border-bottom-left-radius: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"borderBottomRightRadius\", {\n            get: function () { return this.get(\"border-bottom-right-radius\"); },\n            set: function (v) { this.set(\"border-bottom-right-radius: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"borderBottomStyle\", {\n            get: function () { return this.get(\"border-bottom-style\"); },\n            set: function (v) { this.set(\"border-bottom-style: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"borderBottomWidth\", {\n            get: function () { return this.get(\"border-bottom-width\"); },\n            set: function (v) { this.set(\"border-bottom-width: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"borderCollapse\", {\n            get: function () { return this.get(\"border-collapse\"); },\n            set: function (v) { this.set(\"border-collapse: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"borderColor\", {\n            get: function () { return this.get(\"border-color\"); },\n            set: function (v) { this.set(\"border-color: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"borderEndEndRadius\", {\n            get: function () { return this.get(\"border-end-end-radius\"); },\n            set: function (v) { this.set(\"border-end-end-radius: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"borderEndStartRadius\", {\n            get: function () { return this.get(\"border-end-start-radius\"); },\n            set: function (v) { this.set(\"border-end-start-radius: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"borderImage\", {\n            get: function () { return this.get(\"border-image\"); },\n            set: function (v) { this.set(\"border-image: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"borderImageOutset\", {\n            get: function () { return this.get(\"border-image-outset\"); },\n            set: function (v) { this.set(\"border-image-outset: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"borderImageRepeat\", {\n            get: function () { return this.get(\"border-image-repeat\"); },\n            set: function (v) { this.set(\"border-image-repeat: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"borderImageSlice\", {\n            get: function () { return this.get(\"border-image-slice\"); },\n            set: function (v) { this.set(\"border-image-slice: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"borderImageSource\", {\n            get: function () { return this.get(\"border-image-source\"); },\n            set: function (v) { this.set(\"border-image-source: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"borderImageWidth\", {\n            get: function () { return this.get(\"border-image-width\"); },\n            set: function (v) { this.set(\"border-image-width: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"borderInline\", {\n            get: function () { return this.get(\"border-inline\"); },\n            set: function (v) { this.set(\"border-inline: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"borderInlineColor\", {\n            get: function () { return this.get(\"border-inline-color\"); },\n            set: function (v) { this.set(\"border-inline-color: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"borderInlineEnd\", {\n            get: function () { return this.get(\"border-inline-end\"); },\n            set: function (v) { this.set(\"border-inline-end: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"borderInlineEndColor\", {\n            get: function () { return this.get(\"border-inline-end-color\"); },\n            set: function (v) { this.set(\"border-inline-end-color: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"borderInlineEndStyle\", {\n            get: function () { return this.get(\"border-inline-end-style\"); },\n            set: function (v) { this.set(\"border-inline-end-style: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"borderInlineEndWidth\", {\n            get: function () { return this.get(\"border-inline-end-width\"); },\n            set: function (v) { this.set(\"border-inline-end-width: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"borderInlineStart\", {\n            get: function () { return this.get(\"border-inline-start\"); },\n            set: function (v) { this.set(\"border-inline-start: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"borderInlineStartColor\", {\n            get: function () { return this.get(\"border-inline-start-color\"); },\n            set: function (v) { this.set(\"border-inline-start-color: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"borderInlineStartStyle\", {\n            get: function () { return this.get(\"border-inline-start-style\"); },\n            set: function (v) { this.set(\"border-inline-start-style: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"borderInlineStartWidth\", {\n            get: function () { return this.get(\"border-inline-start-width\"); },\n            set: function (v) { this.set(\"border-inline-start-width: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"borderInlineStyle\", {\n            get: function () { return this.get(\"border-inline-style\"); },\n            set: function (v) { this.set(\"border-inline-style: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"borderInlineWidth\", {\n            get: function () { return this.get(\"border-inline-width\"); },\n            set: function (v) { this.set(\"border-inline-width: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"borderLeft\", {\n            get: function () { return this.get(\"border-left\"); },\n            set: function (v) { this.set(\"border-left: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"borderLeftColor\", {\n            get: function () { return this.get(\"border-left-color\"); },\n            set: function (v) { this.set(\"border-left-color: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"borderLeftStyle\", {\n            get: function () { return this.get(\"border-left-style\"); },\n            set: function (v) { this.set(\"border-left-style: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"borderLeftWidth\", {\n            get: function () { return this.get(\"border-left-width\"); },\n            set: function (v) { this.set(\"border-left-width: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"borderRadius\", {\n            get: function () { return this.get(\"border-radius\"); },\n            set: function (v) { this.set(\"border-radius: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"borderRight\", {\n            get: function () { return this.get(\"border-right\"); },\n            set: function (v) { this.set(\"border-right: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"borderRightColor\", {\n            get: function () { return this.get(\"border-right-color\"); },\n            set: function (v) { this.set(\"border-right-color: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"borderRightStyle\", {\n            get: function () { return this.get(\"border-right-style\"); },\n            set: function (v) { this.set(\"border-right-style: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"borderRightWidth\", {\n            get: function () { return this.get(\"border-right-width\"); },\n            set: function (v) { this.set(\"border-right-width: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"borderSpacing\", {\n            get: function () { return this.get(\"border-spacing\"); },\n            set: function (v) { this.set(\"border-spacing: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"borderStartEndRadius\", {\n            get: function () { return this.get(\"border-start-end-radius\"); },\n            set: function (v) { this.set(\"border-start-end-radius: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"borderStartStartRadius\", {\n            get: function () { return this.get(\"border-start-start-radius\"); },\n            set: function (v) { this.set(\"border-start-start-radius: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"borderStyle\", {\n            get: function () { return this.get(\"border-style\"); },\n            set: function (v) { this.set(\"border-style: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"borderTop\", {\n            get: function () { return this.get(\"border-top\"); },\n            set: function (v) { this.set(\"border-top: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"borderTopColor\", {\n            get: function () { return this.get(\"border-top-color\"); },\n            set: function (v) { this.set(\"border-top-color: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"borderTopLeftRadius\", {\n            get: function () { return this.get(\"border-top-left-radius\"); },\n            set: function (v) { this.set(\"border-top-left-radius: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"borderTopRightRadius\", {\n            get: function () { return this.get(\"border-top-right-radius\"); },\n            set: function (v) { this.set(\"border-top-right-radius: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"borderTopStyle\", {\n            get: function () { return this.get(\"border-top-style\"); },\n            set: function (v) { this.set(\"border-top-style: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"borderTopWidth\", {\n            get: function () { return this.get(\"border-top-width\"); },\n            set: function (v) { this.set(\"border-top-width: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"borderWidth\", {\n            get: function () { return this.get(\"border-width\"); },\n            set: function (v) { this.set(\"border-width: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"bottom\", {\n            get: function () { return this.get(\"bottom\"); },\n            set: function (v) { this.set(\"bottom: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"boxShadow\", {\n            get: function () { return this.get(\"box-shadow\"); },\n            set: function (v) { this.set(\"box-shadow: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"boxSizing\", {\n            get: function () { return this.get(\"box-sizing\"); },\n            set: function (v) { this.set(\"box-sizing: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"breakAfter\", {\n            get: function () { return this.get(\"break-after\"); },\n            set: function (v) { this.set(\"break-after: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"breakBefore\", {\n            get: function () { return this.get(\"break-before\"); },\n            set: function (v) { this.set(\"break-before: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"breakInside\", {\n            get: function () { return this.get(\"break-inside\"); },\n            set: function (v) { this.set(\"break-inside: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"bufferedRendering\", {\n            get: function () { return this.get(\"buffered-rendering\"); },\n            set: function (v) { this.set(\"buffered-rendering: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"captionSide\", {\n            get: function () { return this.get(\"caption-side\"); },\n            set: function (v) { this.set(\"caption-side: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"caretColor\", {\n            get: function () { return this.get(\"caret-color\"); },\n            set: function (v) { this.set(\"caret-color: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"clear\", {\n            get: function () { return this.get(\"clear\"); },\n            set: function (v) { this.set(\"clear: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"clip\", {\n            get: function () { return this.get(\"clip\"); },\n            set: function (v) { this.set(\"clip: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"clipPath\", {\n            get: function () { return this.get(\"clip-path\"); },\n            set: function (v) { this.set(\"clip-path: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"clipRule\", {\n            get: function () { return this.get(\"clip-rule\"); },\n            set: function (v) { this.set(\"clip-rule: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"color\", {\n            get: function () { return this.get(\"color\"); },\n            set: function (v) { this.set(\"color: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"colorInterpolation\", {\n            get: function () { return this.get(\"color-interpolation\"); },\n            set: function (v) { this.set(\"color-interpolation: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"colorInterpolationFilters\", {\n            get: function () { return this.get(\"color-interpolation-filters\"); },\n            set: function (v) { this.set(\"color-interpolation-filters: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"colorRendering\", {\n            get: function () { return this.get(\"color-rendering\"); },\n            set: function (v) { this.set(\"color-rendering: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"colorScheme\", {\n            get: function () { return this.get(\"color-scheme\"); },\n            set: function (v) { this.set(\"color-scheme: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"columnCount\", {\n            get: function () { return this.get(\"column-count\"); },\n            set: function (v) { this.set(\"column-count: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"columnFill\", {\n            get: function () { return this.get(\"column-fill\"); },\n            set: function (v) { this.set(\"column-fill: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"columnGap\", {\n            get: function () { return this.get(\"column-gap\"); },\n            set: function (v) { this.set(\"column-gap: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"columnRule\", {\n            get: function () { return this.get(\"column-rule\"); },\n            set: function (v) { this.set(\"column-rule: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"columnRuleColor\", {\n            get: function () { return this.get(\"column-rule-color\"); },\n            set: function (v) { this.set(\"column-rule-color: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"columnRuleStyle\", {\n            get: function () { return this.get(\"column-rule-style\"); },\n            set: function (v) { this.set(\"column-rule-style: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"columnRuleWidth\", {\n            get: function () { return this.get(\"column-rule-width\"); },\n            set: function (v) { this.set(\"column-rule-width: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"columnSpan\", {\n            get: function () { return this.get(\"column-span\"); },\n            set: function (v) { this.set(\"column-span: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"columnWidth\", {\n            get: function () { return this.get(\"column-width\"); },\n            set: function (v) { this.set(\"column-width: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"columns\", {\n            get: function () { return this.get(\"columns\"); },\n            set: function (v) { this.set(\"columns: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"contain\", {\n            get: function () { return this.get(\"contain\"); },\n            set: function (v) { this.set(\"contain: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"containIntrinsicSize\", {\n            get: function () { return this.get(\"contain-intrinsic-size\"); },\n            set: function (v) { this.set(\"contain-intrinsic-size: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"content\", {\n            get: function () { return this.get(\"content\"); },\n            set: function (v) { this.set(\"content: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"contentVisibility\", {\n            get: function () { return this.get(\"content-visibility\"); },\n            set: function (v) { this.set(\"content-visibility: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"counterIncrement\", {\n            get: function () { return this.get(\"counter-increment\"); },\n            set: function (v) { this.set(\"counter-increment: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"counterReset\", {\n            get: function () { return this.get(\"counter-reset\"); },\n            set: function (v) { this.set(\"counter-reset: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"counterSet\", {\n            get: function () { return this.get(\"counter-set\"); },\n            set: function (v) { this.set(\"counter-set: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"cursor\", {\n            get: function () { return this.get(\"cursor\"); },\n            set: function (v) { this.set(\"cursor: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"cx\", {\n            get: function () { return this.get(\"cx\"); },\n            set: function (v) { this.set(\"cx: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"cy\", {\n            get: function () { return this.get(\"cy\"); },\n            set: function (v) { this.set(\"cy: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"d\", {\n            get: function () { return this.get(\"d\"); },\n            set: function (v) { this.set(\"d: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"descentOverride\", {\n            get: function () { return this.get(\"descent-override\"); },\n            set: function (v) { this.set(\"descent-override: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"direction\", {\n            get: function () { return this.get(\"direction\"); },\n            set: function (v) { this.set(\"direction: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"display\", {\n            get: function () { return this.get(\"display\"); },\n            set: function (v) { this.set(\"display: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"dominantBaseline\", {\n            get: function () { return this.get(\"dominant-baseline\"); },\n            set: function (v) { this.set(\"dominant-baseline: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"emptyCells\", {\n            get: function () { return this.get(\"empty-cells\"); },\n            set: function (v) { this.set(\"empty-cells: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"fallback\", {\n            get: function () { return this.get(\"fallback\"); },\n            set: function (v) { this.set(\"fallback: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"fill\", {\n            get: function () { return this.get(\"fill\"); },\n            set: function (v) { this.set(\"fill: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"fillOpacity\", {\n            get: function () { return this.get(\"fill-opacity\"); },\n            set: function (v) { this.set(\"fill-opacity: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"fillRule\", {\n            get: function () { return this.get(\"fill-rule\"); },\n            set: function (v) { this.set(\"fill-rule: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"filter\", {\n            get: function () { return this.get(\"filter\"); },\n            set: function (v) { this.set(\"filter: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"flex\", {\n            get: function () { return this.get(\"flex\"); },\n            set: function (v) { this.set(\"flex: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"flexBasis\", {\n            get: function () { return this.get(\"flex-basis\"); },\n            set: function (v) { this.set(\"flex-basis: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"flexDirection\", {\n            get: function () { return this.get(\"flex-direction\"); },\n            set: function (v) { this.set(\"flex-direction: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"flexFlow\", {\n            get: function () { return this.get(\"flex-flow\"); },\n            set: function (v) { this.set(\"flex-flow: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"flexGrow\", {\n            get: function () { return this.get(\"flex-grow\"); },\n            set: function (v) { this.set(\"flex-grow: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"flexShrink\", {\n            get: function () { return this.get(\"flex-shrink\"); },\n            set: function (v) { this.set(\"flex-shrink: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"flexWrap\", {\n            get: function () { return this.get(\"flex-wrap\"); },\n            set: function (v) { this.set(\"flex-wrap: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"float\", {\n            get: function () { return this.get(\"float\"); },\n            set: function (v) { this.set(\"float: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"floodColor\", {\n            get: function () { return this.get(\"flood-color\"); },\n            set: function (v) { this.set(\"flood-color: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"floodOpacity\", {\n            get: function () { return this.get(\"flood-opacity\"); },\n            set: function (v) { this.set(\"flood-opacity: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"font\", {\n            get: function () { return this.get(\"font\"); },\n            set: function (v) { this.set(\"font: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"fontDisplay\", {\n            get: function () { return this.get(\"font-display\"); },\n            set: function (v) { this.set(\"font-display: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"fontFamily\", {\n            get: function () { return this.get(\"font-family\"); },\n            set: function (v) { this.set(\"font-family: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"fontFeatureSettings\", {\n            get: function () { return this.get(\"font-feature-settings\"); },\n            set: function (v) { this.set(\"font-feature-settings: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"fontKerning\", {\n            get: function () { return this.get(\"font-kerning\"); },\n            set: function (v) { this.set(\"font-kerning: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"fontOpticalSizing\", {\n            get: function () { return this.get(\"font-optical-sizing\"); },\n            set: function (v) { this.set(\"font-optical-sizing: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"fontSize\", {\n            get: function () { return this.get(\"font-size\"); },\n            set: function (v) { this.set(\"font-size: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"fontStretch\", {\n            get: function () { return this.get(\"font-stretch\"); },\n            set: function (v) { this.set(\"font-stretch: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"fontStyle\", {\n            get: function () { return this.get(\"font-style\"); },\n            set: function (v) { this.set(\"font-style: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"fontVariant\", {\n            get: function () { return this.get(\"font-variant\"); },\n            set: function (v) { this.set(\"font-variant: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"fontVariantCaps\", {\n            get: function () { return this.get(\"font-variant-caps\"); },\n            set: function (v) { this.set(\"font-variant-caps: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"fontVariantEastAsian\", {\n            get: function () { return this.get(\"font-variant-east-asian\"); },\n            set: function (v) { this.set(\"font-variant-east-asian: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"fontVariantLigatures\", {\n            get: function () { return this.get(\"font-variant-ligatures\"); },\n            set: function (v) { this.set(\"font-variant-ligatures: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"fontVariantNumeric\", {\n            get: function () { return this.get(\"font-variant-numeric\"); },\n            set: function (v) { this.set(\"font-variant-numeric: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"fontVariationSettings\", {\n            get: function () { return this.get(\"font-variation-settings\"); },\n            set: function (v) { this.set(\"font-variation-settings: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"fontWeight\", {\n            get: function () { return this.get(\"font-weight\"); },\n            set: function (v) { this.set(\"font-weight: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"forcedColorAdjust\", {\n            get: function () { return this.get(\"forced-color-adjust\"); },\n            set: function (v) { this.set(\"forced-color-adjust: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"gap\", {\n            get: function () { return this.get(\"gap\"); },\n            set: function (v) { this.set(\"gap: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"grid\", {\n            get: function () { return this.get(\"grid\"); },\n            set: function (v) { this.set(\"grid: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"gridArea\", {\n            get: function () { return this.get(\"grid-area\"); },\n            set: function (v) { this.set(\"grid-area: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"gridAutoColumns\", {\n            get: function () { return this.get(\"grid-auto-columns\"); },\n            set: function (v) { this.set(\"grid-auto-columns: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"gridAutoFlow\", {\n            get: function () { return this.get(\"grid-auto-flow\"); },\n            set: function (v) { this.set(\"grid-auto-flow: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"gridAutoRows\", {\n            get: function () { return this.get(\"grid-auto-rows\"); },\n            set: function (v) { this.set(\"grid-auto-rows: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"gridColumn\", {\n            get: function () { return this.get(\"grid-column\"); },\n            set: function (v) { this.set(\"grid-column: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"gridColumnEnd\", {\n            get: function () { return this.get(\"grid-column-end\"); },\n            set: function (v) { this.set(\"grid-column-end: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"gridColumnGap\", {\n            get: function () { return this.get(\"grid-column-gap\"); },\n            set: function (v) { this.set(\"grid-column-gap: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"gridColumnStart\", {\n            get: function () { return this.get(\"grid-column-start\"); },\n            set: function (v) { this.set(\"grid-column-start: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"gridGap\", {\n            get: function () { return this.get(\"grid-gap\"); },\n            set: function (v) { this.set(\"grid-gap: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"gridRow\", {\n            get: function () { return this.get(\"grid-row\"); },\n            set: function (v) { this.set(\"grid-row: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"gridRowEnd\", {\n            get: function () { return this.get(\"grid-row-end\"); },\n            set: function (v) { this.set(\"grid-row-end: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"gridRowGap\", {\n            get: function () { return this.get(\"grid-row-gap\"); },\n            set: function (v) { this.set(\"grid-row-gap: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"gridRowStart\", {\n            get: function () { return this.get(\"grid-row-start\"); },\n            set: function (v) { this.set(\"grid-row-start: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"gridTemplate\", {\n            get: function () { return this.get(\"grid-template\"); },\n            set: function (v) { this.set(\"grid-template: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"gridTemplateAreas\", {\n            get: function () { return this.get(\"grid-template-areas\"); },\n            set: function (v) { this.set(\"grid-template-areas: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"gridTemplateColumns\", {\n            get: function () { return this.get(\"grid-template-columns\"); },\n            set: function (v) { this.set(\"grid-template-columns: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"gridTemplateRows\", {\n            get: function () { return this.get(\"grid-template-rows\"); },\n            set: function (v) { this.set(\"grid-template-rows: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"height\", {\n            get: function () { return this.get(\"height\"); },\n            set: function (v) { this.set(\"height: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"hyphens\", {\n            get: function () { return this.get(\"hyphens\"); },\n            set: function (v) { this.set(\"hyphens: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"imageOrientation\", {\n            get: function () { return this.get(\"image-orientation\"); },\n            set: function (v) { this.set(\"image-orientation: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"imageRendering\", {\n            get: function () { return this.get(\"image-rendering\"); },\n            set: function (v) { this.set(\"image-rendering: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"inherits\", {\n            get: function () { return this.get(\"inherits\"); },\n            set: function (v) { this.set(\"inherits: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"initialValue\", {\n            get: function () { return this.get(\"initial-value\"); },\n            set: function (v) { this.set(\"initial-value: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"inlineSize\", {\n            get: function () { return this.get(\"inline-size\"); },\n            set: function (v) { this.set(\"inline-size: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"inset\", {\n            get: function () { return this.get(\"inset\"); },\n            set: function (v) { this.set(\"inset: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"insetBlock\", {\n            get: function () { return this.get(\"inset-block\"); },\n            set: function (v) { this.set(\"inset-block: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"insetBlockEnd\", {\n            get: function () { return this.get(\"inset-block-end\"); },\n            set: function (v) { this.set(\"inset-block-end: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"insetBlockStart\", {\n            get: function () { return this.get(\"inset-block-start\"); },\n            set: function (v) { this.set(\"inset-block-start: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"insetInline\", {\n            get: function () { return this.get(\"inset-inline\"); },\n            set: function (v) { this.set(\"inset-inline: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"insetInlineEnd\", {\n            get: function () { return this.get(\"inset-inline-end\"); },\n            set: function (v) { this.set(\"inset-inline-end: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"insetInlineStart\", {\n            get: function () { return this.get(\"inset-inline-start\"); },\n            set: function (v) { this.set(\"inset-inline-start: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"isolation\", {\n            get: function () { return this.get(\"isolation\"); },\n            set: function (v) { this.set(\"isolation: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"justifyContent\", {\n            get: function () { return this.get(\"justify-content\"); },\n            set: function (v) { this.set(\"justify-content: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"justifyItems\", {\n            get: function () { return this.get(\"justify-items\"); },\n            set: function (v) { this.set(\"justify-items: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"justifySelf\", {\n            get: function () { return this.get(\"justify-self\"); },\n            set: function (v) { this.set(\"justify-self: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"left\", {\n            get: function () { return this.get(\"left\"); },\n            set: function (v) { this.set(\"left: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"letterSpacing\", {\n            get: function () { return this.get(\"letter-spacing\"); },\n            set: function (v) { this.set(\"letter-spacing: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"lightingColor\", {\n            get: function () { return this.get(\"lighting-color\"); },\n            set: function (v) { this.set(\"lighting-color: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"lineBreak\", {\n            get: function () { return this.get(\"line-break\"); },\n            set: function (v) { this.set(\"line-break: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"lineGapOverride\", {\n            get: function () { return this.get(\"line-gap-override\"); },\n            set: function (v) { this.set(\"line-gap-override: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"lineHeight\", {\n            get: function () { return this.get(\"line-height\"); },\n            set: function (v) { this.set(\"line-height: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"listStyle\", {\n            get: function () { return this.get(\"list-style\"); },\n            set: function (v) { this.set(\"list-style: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"listStyleImage\", {\n            get: function () { return this.get(\"list-style-image\"); },\n            set: function (v) { this.set(\"list-style-image: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"listStylePosition\", {\n            get: function () { return this.get(\"list-style-position\"); },\n            set: function (v) { this.set(\"list-style-position: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"listStyleType\", {\n            get: function () { return this.get(\"list-style-type\"); },\n            set: function (v) { this.set(\"list-style-type: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"margin\", {\n            get: function () { return this.get(\"margin\"); },\n            set: function (v) { this.set(\"margin: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"marginBlock\", {\n            get: function () { return this.get(\"margin-block\"); },\n            set: function (v) { this.set(\"margin-block: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"marginBlockEnd\", {\n            get: function () { return this.get(\"margin-block-end\"); },\n            set: function (v) { this.set(\"margin-block-end: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"marginBlockStart\", {\n            get: function () { return this.get(\"margin-block-start\"); },\n            set: function (v) { this.set(\"margin-block-start: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"marginBottom\", {\n            get: function () { return this.get(\"margin-bottom\"); },\n            set: function (v) { this.set(\"margin-bottom: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"marginInline\", {\n            get: function () { return this.get(\"margin-inline\"); },\n            set: function (v) { this.set(\"margin-inline: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"marginInlineEnd\", {\n            get: function () { return this.get(\"margin-inline-end\"); },\n            set: function (v) { this.set(\"margin-inline-end: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"marginInlineStart\", {\n            get: function () { return this.get(\"margin-inline-start\"); },\n            set: function (v) { this.set(\"margin-inline-start: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"marginLeft\", {\n            get: function () { return this.get(\"margin-left\"); },\n            set: function (v) { this.set(\"margin-left: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"marginRight\", {\n            get: function () { return this.get(\"margin-right\"); },\n            set: function (v) { this.set(\"margin-right: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"marginTop\", {\n            get: function () { return this.get(\"margin-top\"); },\n            set: function (v) { this.set(\"margin-top: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"marker\", {\n            get: function () { return this.get(\"marker\"); },\n            set: function (v) { this.set(\"marker: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"markerEnd\", {\n            get: function () { return this.get(\"marker-end\"); },\n            set: function (v) { this.set(\"marker-end: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"markerMid\", {\n            get: function () { return this.get(\"marker-mid\"); },\n            set: function (v) { this.set(\"marker-mid: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"markerStart\", {\n            get: function () { return this.get(\"marker-start\"); },\n            set: function (v) { this.set(\"marker-start: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"mask\", {\n            get: function () { return this.get(\"mask\"); },\n            set: function (v) { this.set(\"mask: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"maskType\", {\n            get: function () { return this.get(\"mask-type\"); },\n            set: function (v) { this.set(\"mask-type: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"maxBlockSize\", {\n            get: function () { return this.get(\"max-block-size\"); },\n            set: function (v) { this.set(\"max-block-size: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"maxHeight\", {\n            get: function () { return this.get(\"max-height\"); },\n            set: function (v) { this.set(\"max-height: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"maxInlineSize\", {\n            get: function () { return this.get(\"max-inline-size\"); },\n            set: function (v) { this.set(\"max-inline-size: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"maxWidth\", {\n            get: function () { return this.get(\"max-width\"); },\n            set: function (v) { this.set(\"max-width: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"maxZoom\", {\n            get: function () { return this.get(\"max-zoom\"); },\n            set: function (v) { this.set(\"max-zoom: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"minBlockSize\", {\n            get: function () { return this.get(\"min-block-size\"); },\n            set: function (v) { this.set(\"min-block-size: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"minHeight\", {\n            get: function () { return this.get(\"min-height\"); },\n            set: function (v) { this.set(\"min-height: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"minInlineSize\", {\n            get: function () { return this.get(\"min-inline-size\"); },\n            set: function (v) { this.set(\"min-inline-size: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"minWidth\", {\n            get: function () { return this.get(\"min-width\"); },\n            set: function (v) { this.set(\"min-width: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"minZoom\", {\n            get: function () { return this.get(\"min-zoom\"); },\n            set: function (v) { this.set(\"min-zoom: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"mixBlendMode\", {\n            get: function () { return this.get(\"mix-blend-mode\"); },\n            set: function (v) { this.set(\"mix-blend-mode: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"negative\", {\n            get: function () { return this.get(\"negative\"); },\n            set: function (v) { this.set(\"negative: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"objectFit\", {\n            get: function () { return this.get(\"object-fit\"); },\n            set: function (v) { this.set(\"object-fit: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"objectPosition\", {\n            get: function () { return this.get(\"object-position\"); },\n            set: function (v) { this.set(\"object-position: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"offset\", {\n            get: function () { return this.get(\"offset\"); },\n            set: function (v) { this.set(\"offset: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"offsetDistance\", {\n            get: function () { return this.get(\"offset-distance\"); },\n            set: function (v) { this.set(\"offset-distance: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"offsetPath\", {\n            get: function () { return this.get(\"offset-path\"); },\n            set: function (v) { this.set(\"offset-path: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"offsetRotate\", {\n            get: function () { return this.get(\"offset-rotate\"); },\n            set: function (v) { this.set(\"offset-rotate: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"opacity\", {\n            get: function () { return this.get(\"opacity\"); },\n            set: function (v) { this.set(\"opacity: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"order\", {\n            get: function () { return this.get(\"order\"); },\n            set: function (v) { this.set(\"order: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"orientation\", {\n            get: function () { return this.get(\"orientation\"); },\n            set: function (v) { this.set(\"orientation: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"orphans\", {\n            get: function () { return this.get(\"orphans\"); },\n            set: function (v) { this.set(\"orphans: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"outline\", {\n            get: function () { return this.get(\"outline\"); },\n            set: function (v) { this.set(\"outline: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"outlineColor\", {\n            get: function () { return this.get(\"outline-color\"); },\n            set: function (v) { this.set(\"outline-color: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"outlineOffset\", {\n            get: function () { return this.get(\"outline-offset\"); },\n            set: function (v) { this.set(\"outline-offset: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"outlineStyle\", {\n            get: function () { return this.get(\"outline-style\"); },\n            set: function (v) { this.set(\"outline-style: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"outlineWidth\", {\n            get: function () { return this.get(\"outline-width\"); },\n            set: function (v) { this.set(\"outline-width: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"overflow\", {\n            get: function () { return this.get(\"overflow\"); },\n            set: function (v) { this.set(\"overflow: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"overflowAnchor\", {\n            get: function () { return this.get(\"overflow-anchor\"); },\n            set: function (v) { this.set(\"overflow-anchor: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"overflowClipMargin\", {\n            get: function () { return this.get(\"overflow-clip-margin\"); },\n            set: function (v) { this.set(\"overflow-clip-margin: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"overflowWrap\", {\n            get: function () { return this.get(\"overflow-wrap\"); },\n            set: function (v) { this.set(\"overflow-wrap: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"overflowX\", {\n            get: function () { return this.get(\"overflow-x\"); },\n            set: function (v) { this.set(\"overflow-x: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"overflowY\", {\n            get: function () { return this.get(\"overflow-y\"); },\n            set: function (v) { this.set(\"overflow-y: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"overscrollBehavior\", {\n            get: function () { return this.get(\"overscroll-behavior\"); },\n            set: function (v) { this.set(\"overscroll-behavior: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"overscrollBehaviorBlock\", {\n            get: function () { return this.get(\"overscroll-behavior-block\"); },\n            set: function (v) { this.set(\"overscroll-behavior-block: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"overscrollBehaviorInline\", {\n            get: function () { return this.get(\"overscroll-behavior-inline\"); },\n            set: function (v) { this.set(\"overscroll-behavior-inline: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"overscrollBehaviorX\", {\n            get: function () { return this.get(\"overscroll-behavior-x\"); },\n            set: function (v) { this.set(\"overscroll-behavior-x: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"overscrollBehaviorY\", {\n            get: function () { return this.get(\"overscroll-behavior-y\"); },\n            set: function (v) { this.set(\"overscroll-behavior-y: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"pad\", {\n            get: function () { return this.get(\"pad\"); },\n            set: function (v) { this.set(\"pad: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"padding\", {\n            get: function () { return this.get(\"padding\"); },\n            set: function (v) { this.set(\"padding: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"paddingBlock\", {\n            get: function () { return this.get(\"padding-block\"); },\n            set: function (v) { this.set(\"padding-block: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"paddingBlockEnd\", {\n            get: function () { return this.get(\"padding-block-end\"); },\n            set: function (v) { this.set(\"padding-block-end: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"paddingBlockStart\", {\n            get: function () { return this.get(\"padding-block-start\"); },\n            set: function (v) { this.set(\"padding-block-start: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"paddingBottom\", {\n            get: function () { return this.get(\"padding-bottom\"); },\n            set: function (v) { this.set(\"padding-bottom: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"paddingInline\", {\n            get: function () { return this.get(\"padding-inline\"); },\n            set: function (v) { this.set(\"padding-inline: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"paddingInlineEnd\", {\n            get: function () { return this.get(\"padding-inline-end\"); },\n            set: function (v) { this.set(\"padding-inline-end: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"paddingInlineStart\", {\n            get: function () { return this.get(\"padding-inline-start\"); },\n            set: function (v) { this.set(\"padding-inline-start: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"paddingLeft\", {\n            get: function () { return this.get(\"padding-left\"); },\n            set: function (v) { this.set(\"padding-left: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"paddingRight\", {\n            get: function () { return this.get(\"padding-right\"); },\n            set: function (v) { this.set(\"padding-right: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"paddingTop\", {\n            get: function () { return this.get(\"padding-top\"); },\n            set: function (v) { this.set(\"padding-top: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"page\", {\n            get: function () { return this.get(\"page\"); },\n            set: function (v) { this.set(\"page: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"pageBreakAfter\", {\n            get: function () { return this.get(\"page-break-after\"); },\n            set: function (v) { this.set(\"page-break-after: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"pageBreakBefore\", {\n            get: function () { return this.get(\"page-break-before\"); },\n            set: function (v) { this.set(\"page-break-before: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"pageBreakInside\", {\n            get: function () { return this.get(\"page-break-inside\"); },\n            set: function (v) { this.set(\"page-break-inside: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"pageOrientation\", {\n            get: function () { return this.get(\"page-orientation\"); },\n            set: function (v) { this.set(\"page-orientation: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"paintOrder\", {\n            get: function () { return this.get(\"paint-order\"); },\n            set: function (v) { this.set(\"paint-order: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"perspective\", {\n            get: function () { return this.get(\"perspective\"); },\n            set: function (v) { this.set(\"perspective: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"perspectiveOrigin\", {\n            get: function () { return this.get(\"perspective-origin\"); },\n            set: function (v) { this.set(\"perspective-origin: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"placeContent\", {\n            get: function () { return this.get(\"place-content\"); },\n            set: function (v) { this.set(\"place-content: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"placeItems\", {\n            get: function () { return this.get(\"place-items\"); },\n            set: function (v) { this.set(\"place-items: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"placeSelf\", {\n            get: function () { return this.get(\"place-self\"); },\n            set: function (v) { this.set(\"place-self: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"pointerEvents\", {\n            get: function () { return this.get(\"pointer-events\"); },\n            set: function (v) { this.set(\"pointer-events: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"position\", {\n            get: function () { return this.get(\"position\"); },\n            set: function (v) { this.set(\"position: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"prefix\", {\n            get: function () { return this.get(\"prefix\"); },\n            set: function (v) { this.set(\"prefix: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"quotes\", {\n            get: function () { return this.get(\"quotes\"); },\n            set: function (v) { this.set(\"quotes: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"r\", {\n            get: function () { return this.get(\"r\"); },\n            set: function (v) { this.set(\"r: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"range\", {\n            get: function () { return this.get(\"range\"); },\n            set: function (v) { this.set(\"range: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"resize\", {\n            get: function () { return this.get(\"resize\"); },\n            set: function (v) { this.set(\"resize: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"right\", {\n            get: function () { return this.get(\"right\"); },\n            set: function (v) { this.set(\"right: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"rowGap\", {\n            get: function () { return this.get(\"row-gap\"); },\n            set: function (v) { this.set(\"row-gap: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"rubyPosition\", {\n            get: function () { return this.get(\"ruby-position\"); },\n            set: function (v) { this.set(\"ruby-position: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"rx\", {\n            get: function () { return this.get(\"rx\"); },\n            set: function (v) { this.set(\"rx: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"ry\", {\n            get: function () { return this.get(\"ry\"); },\n            set: function (v) { this.set(\"ry: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"scrollBehavior\", {\n            get: function () { return this.get(\"scroll-behavior\"); },\n            set: function (v) { this.set(\"scroll-behavior: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"scrollMargin\", {\n            get: function () { return this.get(\"scroll-margin\"); },\n            set: function (v) { this.set(\"scroll-margin: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"scrollMarginBlock\", {\n            get: function () { return this.get(\"scroll-margin-block\"); },\n            set: function (v) { this.set(\"scroll-margin-block: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"scrollMarginBlockEnd\", {\n            get: function () { return this.get(\"scroll-margin-block-end\"); },\n            set: function (v) { this.set(\"scroll-margin-block-end: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"scrollMarginBlockStart\", {\n            get: function () { return this.get(\"scroll-margin-block-start\"); },\n            set: function (v) { this.set(\"scroll-margin-block-start: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"scrollMarginBottom\", {\n            get: function () { return this.get(\"scroll-margin-bottom\"); },\n            set: function (v) { this.set(\"scroll-margin-bottom: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"scrollMarginInline\", {\n            get: function () { return this.get(\"scroll-margin-inline\"); },\n            set: function (v) { this.set(\"scroll-margin-inline: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"scrollMarginInlineEnd\", {\n            get: function () { return this.get(\"scroll-margin-inline-end\"); },\n            set: function (v) { this.set(\"scroll-margin-inline-end: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"scrollMarginInlineStart\", {\n            get: function () { return this.get(\"scroll-margin-inline-start\"); },\n            set: function (v) { this.set(\"scroll-margin-inline-start: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"scrollMarginLeft\", {\n            get: function () { return this.get(\"scroll-margin-left\"); },\n            set: function (v) { this.set(\"scroll-margin-left: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"scrollMarginRight\", {\n            get: function () { return this.get(\"scroll-margin-right\"); },\n            set: function (v) { this.set(\"scroll-margin-right: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"scrollMarginTop\", {\n            get: function () { return this.get(\"scroll-margin-top\"); },\n            set: function (v) { this.set(\"scroll-margin-top: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"scrollPadding\", {\n            get: function () { return this.get(\"scroll-padding\"); },\n            set: function (v) { this.set(\"scroll-padding: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"scrollPaddingBlock\", {\n            get: function () { return this.get(\"scroll-padding-block\"); },\n            set: function (v) { this.set(\"scroll-padding-block: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"scrollPaddingBlockEnd\", {\n            get: function () { return this.get(\"scroll-padding-block-end\"); },\n            set: function (v) { this.set(\"scroll-padding-block-end: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"scrollPaddingBlockStart\", {\n            get: function () { return this.get(\"scroll-padding-block-start\"); },\n            set: function (v) { this.set(\"scroll-padding-block-start: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"scrollPaddingBottom\", {\n            get: function () { return this.get(\"scroll-padding-bottom\"); },\n            set: function (v) { this.set(\"scroll-padding-bottom: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"scrollPaddingInline\", {\n            get: function () { return this.get(\"scroll-padding-inline\"); },\n            set: function (v) { this.set(\"scroll-padding-inline: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"scrollPaddingInlineEnd\", {\n            get: function () { return this.get(\"scroll-padding-inline-end\"); },\n            set: function (v) { this.set(\"scroll-padding-inline-end: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"scrollPaddingInlineStart\", {\n            get: function () { return this.get(\"scroll-padding-inline-start\"); },\n            set: function (v) { this.set(\"scroll-padding-inline-start: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"scrollPaddingLeft\", {\n            get: function () { return this.get(\"scroll-padding-left\"); },\n            set: function (v) { this.set(\"scroll-padding-left: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"scrollPaddingRight\", {\n            get: function () { return this.get(\"scroll-padding-right\"); },\n            set: function (v) { this.set(\"scroll-padding-right: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"scrollPaddingTop\", {\n            get: function () { return this.get(\"scroll-padding-top\"); },\n            set: function (v) { this.set(\"scroll-padding-top: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"scrollSnapAlign\", {\n            get: function () { return this.get(\"scroll-snap-align\"); },\n            set: function (v) { this.set(\"scroll-snap-align: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"scrollSnapStop\", {\n            get: function () { return this.get(\"scroll-snap-stop\"); },\n            set: function (v) { this.set(\"scroll-snap-stop: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"scrollSnapType\", {\n            get: function () { return this.get(\"scroll-snap-type\"); },\n            set: function (v) { this.set(\"scroll-snap-type: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"shapeImageThreshold\", {\n            get: function () { return this.get(\"shape-image-threshold\"); },\n            set: function (v) { this.set(\"shape-image-threshold: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"shapeMargin\", {\n            get: function () { return this.get(\"shape-margin\"); },\n            set: function (v) { this.set(\"shape-margin: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"shapeOutside\", {\n            get: function () { return this.get(\"shape-outside\"); },\n            set: function (v) { this.set(\"shape-outside: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"shapeRendering\", {\n            get: function () { return this.get(\"shape-rendering\"); },\n            set: function (v) { this.set(\"shape-rendering: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"size\", {\n            get: function () { return this.get(\"size\"); },\n            set: function (v) { this.set(\"size: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"speak\", {\n            get: function () { return this.get(\"speak\"); },\n            set: function (v) { this.set(\"speak: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"speakAs\", {\n            get: function () { return this.get(\"speak-as\"); },\n            set: function (v) { this.set(\"speak-as: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"src\", {\n            get: function () { return this.get(\"src\"); },\n            set: function (v) { this.set(\"src: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"stopColor\", {\n            get: function () { return this.get(\"stop-color\"); },\n            set: function (v) { this.set(\"stop-color: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"stopOpacity\", {\n            get: function () { return this.get(\"stop-opacity\"); },\n            set: function (v) { this.set(\"stop-opacity: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"stroke\", {\n            get: function () { return this.get(\"stroke\"); },\n            set: function (v) { this.set(\"stroke: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"strokeDasharray\", {\n            get: function () { return this.get(\"stroke-dasharray\"); },\n            set: function (v) { this.set(\"stroke-dasharray: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"strokeDashoffset\", {\n            get: function () { return this.get(\"stroke-dashoffset\"); },\n            set: function (v) { this.set(\"stroke-dashoffset: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"strokeLinecap\", {\n            get: function () { return this.get(\"stroke-linecap\"); },\n            set: function (v) { this.set(\"stroke-linecap: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"strokeLinejoin\", {\n            get: function () { return this.get(\"stroke-linejoin\"); },\n            set: function (v) { this.set(\"stroke-linejoin: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"strokeMiterlimit\", {\n            get: function () { return this.get(\"stroke-miterlimit\"); },\n            set: function (v) { this.set(\"stroke-miterlimit: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"strokeOpacity\", {\n            get: function () { return this.get(\"stroke-opacity\"); },\n            set: function (v) { this.set(\"stroke-opacity: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"strokeWidth\", {\n            get: function () { return this.get(\"stroke-width\"); },\n            set: function (v) { this.set(\"stroke-width: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"suffix\", {\n            get: function () { return this.get(\"suffix\"); },\n            set: function (v) { this.set(\"suffix: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"symbols\", {\n            get: function () { return this.get(\"symbols\"); },\n            set: function (v) { this.set(\"symbols: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"syntax\", {\n            get: function () { return this.get(\"syntax\"); },\n            set: function (v) { this.set(\"syntax: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"system\", {\n            get: function () { return this.get(\"system\"); },\n            set: function (v) { this.set(\"system: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"tabSize\", {\n            get: function () { return this.get(\"tab-size\"); },\n            set: function (v) { this.set(\"tab-size: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"tableLayout\", {\n            get: function () { return this.get(\"table-layout\"); },\n            set: function (v) { this.set(\"table-layout: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"textAlign\", {\n            get: function () { return this.get(\"text-align\"); },\n            set: function (v) { this.set(\"text-align: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"textAlignLast\", {\n            get: function () { return this.get(\"text-align-last\"); },\n            set: function (v) { this.set(\"text-align-last: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"textAnchor\", {\n            get: function () { return this.get(\"text-anchor\"); },\n            set: function (v) { this.set(\"text-anchor: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"textCombineUpright\", {\n            get: function () { return this.get(\"text-combine-upright\"); },\n            set: function (v) { this.set(\"text-combine-upright: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"textDecoration\", {\n            get: function () { return this.get(\"text-decoration\"); },\n            set: function (v) { this.set(\"text-decoration: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"textDecorationColor\", {\n            get: function () { return this.get(\"text-decoration-color\"); },\n            set: function (v) { this.set(\"text-decoration-color: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"textDecorationLine\", {\n            get: function () { return this.get(\"text-decoration-line\"); },\n            set: function (v) { this.set(\"text-decoration-line: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"textDecorationSkipInk\", {\n            get: function () { return this.get(\"text-decoration-skip-ink\"); },\n            set: function (v) { this.set(\"text-decoration-skip-ink: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"textDecorationStyle\", {\n            get: function () { return this.get(\"text-decoration-style\"); },\n            set: function (v) { this.set(\"text-decoration-style: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"textDecorationThickness\", {\n            get: function () { return this.get(\"text-decoration-thickness\"); },\n            set: function (v) { this.set(\"text-decoration-thickness: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"textIndent\", {\n            get: function () { return this.get(\"text-indent\"); },\n            set: function (v) { this.set(\"text-indent: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"textOrientation\", {\n            get: function () { return this.get(\"text-orientation\"); },\n            set: function (v) { this.set(\"text-orientation: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"textOverflow\", {\n            get: function () { return this.get(\"text-overflow\"); },\n            set: function (v) { this.set(\"text-overflow: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"textRendering\", {\n            get: function () { return this.get(\"text-rendering\"); },\n            set: function (v) { this.set(\"text-rendering: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"textShadow\", {\n            get: function () { return this.get(\"text-shadow\"); },\n            set: function (v) { this.set(\"text-shadow: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"textSizeAdjust\", {\n            get: function () { return this.get(\"text-size-adjust\"); },\n            set: function (v) { this.set(\"text-size-adjust: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"textTransform\", {\n            get: function () { return this.get(\"text-transform\"); },\n            set: function (v) { this.set(\"text-transform: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"textUnderlineOffset\", {\n            get: function () { return this.get(\"text-underline-offset\"); },\n            set: function (v) { this.set(\"text-underline-offset: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"textUnderlinePosition\", {\n            get: function () { return this.get(\"text-underline-position\"); },\n            set: function (v) { this.set(\"text-underline-position: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"top\", {\n            get: function () { return this.get(\"top\"); },\n            set: function (v) { this.set(\"top: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"touchAction\", {\n            get: function () { return this.get(\"touch-action\"); },\n            set: function (v) { this.set(\"touch-action: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"transform\", {\n            get: function () { return this.get(\"transform\"); },\n            set: function (v) { this.set(\"transform: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"transformBox\", {\n            get: function () { return this.get(\"transform-box\"); },\n            set: function (v) { this.set(\"transform-box: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"transformOrigin\", {\n            get: function () { return this.get(\"transform-origin\"); },\n            set: function (v) { this.set(\"transform-origin: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"transformStyle\", {\n            get: function () { return this.get(\"transform-style\"); },\n            set: function (v) { this.set(\"transform-style: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"transition\", {\n            get: function () { return this.get(\"transition\"); },\n            set: function (v) { this.set(\"transition: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"transitionDelay\", {\n            get: function () { return this.get(\"transition-delay\"); },\n            set: function (v) { this.set(\"transition-delay: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"transitionDuration\", {\n            get: function () { return this.get(\"transition-duration\"); },\n            set: function (v) { this.set(\"transition-duration: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"transitionProperty\", {\n            get: function () { return this.get(\"transition-property\"); },\n            set: function (v) { this.set(\"transition-property: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"transitionTimingFunction\", {\n            get: function () { return this.get(\"transition-timing-function\"); },\n            set: function (v) { this.set(\"transition-timing-function: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"unicodeBidi\", {\n            get: function () { return this.get(\"unicode-bidi\"); },\n            set: function (v) { this.set(\"unicode-bidi: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"unicodeRange\", {\n            get: function () { return this.get(\"unicode-range\"); },\n            set: function (v) { this.set(\"unicode-range: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"userSelect\", {\n            get: function () { return this.get(\"user-select\"); },\n            set: function (v) { this.set(\"user-select: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"userZoom\", {\n            get: function () { return this.get(\"user-zoom\"); },\n            set: function (v) { this.set(\"user-zoom: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"vectorEffect\", {\n            get: function () { return this.get(\"vector-effect\"); },\n            set: function (v) { this.set(\"vector-effect: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"verticalAlign\", {\n            get: function () { return this.get(\"vertical-align\"); },\n            set: function (v) { this.set(\"vertical-align: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"visibility\", {\n            get: function () { return this.get(\"visibility\"); },\n            set: function (v) { this.set(\"visibility: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitAlignContent\", {\n            get: function () { return this.get(\"webkit-align-content\"); },\n            set: function (v) { this.set(\"webkit-align-content: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitAlignItems\", {\n            get: function () { return this.get(\"webkit-align-items\"); },\n            set: function (v) { this.set(\"webkit-align-items: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitAlignSelf\", {\n            get: function () { return this.get(\"webkit-align-self\"); },\n            set: function (v) { this.set(\"webkit-align-self: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitAnimation\", {\n            get: function () { return this.get(\"webkit-animation\"); },\n            set: function (v) { this.set(\"webkit-animation: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitAnimationDelay\", {\n            get: function () { return this.get(\"webkit-animation-delay\"); },\n            set: function (v) { this.set(\"webkit-animation-delay: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitAnimationDirection\", {\n            get: function () { return this.get(\"webkit-animation-direction\"); },\n            set: function (v) { this.set(\"webkit-animation-direction: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitAnimationDuration\", {\n            get: function () { return this.get(\"webkit-animation-duration\"); },\n            set: function (v) { this.set(\"webkit-animation-duration: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitAnimationFillMode\", {\n            get: function () { return this.get(\"webkit-animation-fill-mode\"); },\n            set: function (v) { this.set(\"webkit-animation-fill-mode: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitAnimationIterationCount\", {\n            get: function () { return this.get(\"webkit-animation-iteration-count\"); },\n            set: function (v) { this.set(\"webkit-animation-iteration-count: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitAnimationName\", {\n            get: function () { return this.get(\"webkit-animation-name\"); },\n            set: function (v) { this.set(\"webkit-animation-name: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitAnimationPlayState\", {\n            get: function () { return this.get(\"webkit-animation-play-state\"); },\n            set: function (v) { this.set(\"webkit-animation-play-state: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitAnimationTimingFunction\", {\n            get: function () { return this.get(\"webkit-animation-timing-function\"); },\n            set: function (v) { this.set(\"webkit-animation-timing-function: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitAppRegion\", {\n            get: function () { return this.get(\"webkit-app-region\"); },\n            set: function (v) { this.set(\"webkit-app-region: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitAppearance\", {\n            get: function () { return this.get(\"webkit-appearance\"); },\n            set: function (v) { this.set(\"webkit-appearance: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitBackfaceVisibility\", {\n            get: function () { return this.get(\"webkit-backface-visibility\"); },\n            set: function (v) { this.set(\"webkit-backface-visibility: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitBackgroundClip\", {\n            get: function () { return this.get(\"webkit-background-clip\"); },\n            set: function (v) { this.set(\"webkit-background-clip: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitBackgroundOrigin\", {\n            get: function () { return this.get(\"webkit-background-origin\"); },\n            set: function (v) { this.set(\"webkit-background-origin: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitBackgroundSize\", {\n            get: function () { return this.get(\"webkit-background-size\"); },\n            set: function (v) { this.set(\"webkit-background-size: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitBorderAfter\", {\n            get: function () { return this.get(\"webkit-border-after\"); },\n            set: function (v) { this.set(\"webkit-border-after: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitBorderAfterColor\", {\n            get: function () { return this.get(\"webkit-border-after-color\"); },\n            set: function (v) { this.set(\"webkit-border-after-color: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitBorderAfterStyle\", {\n            get: function () { return this.get(\"webkit-border-after-style\"); },\n            set: function (v) { this.set(\"webkit-border-after-style: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitBorderAfterWidth\", {\n            get: function () { return this.get(\"webkit-border-after-width\"); },\n            set: function (v) { this.set(\"webkit-border-after-width: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitBorderBefore\", {\n            get: function () { return this.get(\"webkit-border-before\"); },\n            set: function (v) { this.set(\"webkit-border-before: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitBorderBeforeColor\", {\n            get: function () { return this.get(\"webkit-border-before-color\"); },\n            set: function (v) { this.set(\"webkit-border-before-color: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitBorderBeforeStyle\", {\n            get: function () { return this.get(\"webkit-border-before-style\"); },\n            set: function (v) { this.set(\"webkit-border-before-style: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitBorderBeforeWidth\", {\n            get: function () { return this.get(\"webkit-border-before-width\"); },\n            set: function (v) { this.set(\"webkit-border-before-width: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitBorderBottomLeftRadius\", {\n            get: function () { return this.get(\"webkit-border-bottom-left-radius\"); },\n            set: function (v) { this.set(\"webkit-border-bottom-left-radius: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitBorderBottomRightRadius\", {\n            get: function () { return this.get(\"webkit-border-bottom-right-radius\"); },\n            set: function (v) { this.set(\"webkit-border-bottom-right-radius: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitBorderEnd\", {\n            get: function () { return this.get(\"webkit-border-end\"); },\n            set: function (v) { this.set(\"webkit-border-end: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitBorderEndColor\", {\n            get: function () { return this.get(\"webkit-border-end-color\"); },\n            set: function (v) { this.set(\"webkit-border-end-color: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitBorderEndStyle\", {\n            get: function () { return this.get(\"webkit-border-end-style\"); },\n            set: function (v) { this.set(\"webkit-border-end-style: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitBorderEndWidth\", {\n            get: function () { return this.get(\"webkit-border-end-width\"); },\n            set: function (v) { this.set(\"webkit-border-end-width: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitBorderHorizontalSpacing\", {\n            get: function () { return this.get(\"webkit-border-horizontal-spacing\"); },\n            set: function (v) { this.set(\"webkit-border-horizontal-spacing: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitBorderImage\", {\n            get: function () { return this.get(\"webkit-border-image\"); },\n            set: function (v) { this.set(\"webkit-border-image: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitBorderRadius\", {\n            get: function () { return this.get(\"webkit-border-radius\"); },\n            set: function (v) { this.set(\"webkit-border-radius: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitBorderStart\", {\n            get: function () { return this.get(\"webkit-border-start\"); },\n            set: function (v) { this.set(\"webkit-border-start: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitBorderStartColor\", {\n            get: function () { return this.get(\"webkit-border-start-color\"); },\n            set: function (v) { this.set(\"webkit-border-start-color: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitBorderStartStyle\", {\n            get: function () { return this.get(\"webkit-border-start-style\"); },\n            set: function (v) { this.set(\"webkit-border-start-style: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitBorderStartWidth\", {\n            get: function () { return this.get(\"webkit-border-start-width\"); },\n            set: function (v) { this.set(\"webkit-border-start-width: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitBorderTopLeftRadius\", {\n            get: function () { return this.get(\"webkit-border-top-left-radius\"); },\n            set: function (v) { this.set(\"webkit-border-top-left-radius: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitBorderTopRightRadius\", {\n            get: function () { return this.get(\"webkit-border-top-right-radius\"); },\n            set: function (v) { this.set(\"webkit-border-top-right-radius: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitBorderVerticalSpacing\", {\n            get: function () { return this.get(\"webkit-border-vertical-spacing\"); },\n            set: function (v) { this.set(\"webkit-border-vertical-spacing: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitBoxAlign\", {\n            get: function () { return this.get(\"webkit-box-align\"); },\n            set: function (v) { this.set(\"webkit-box-align: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitBoxDecorationBreak\", {\n            get: function () { return this.get(\"webkit-box-decoration-break\"); },\n            set: function (v) { this.set(\"webkit-box-decoration-break: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitBoxDirection\", {\n            get: function () { return this.get(\"webkit-box-direction\"); },\n            set: function (v) { this.set(\"webkit-box-direction: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitBoxFlex\", {\n            get: function () { return this.get(\"webkit-box-flex\"); },\n            set: function (v) { this.set(\"webkit-box-flex: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitBoxOrdinalGroup\", {\n            get: function () { return this.get(\"webkit-box-ordinal-group\"); },\n            set: function (v) { this.set(\"webkit-box-ordinal-group: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitBoxOrient\", {\n            get: function () { return this.get(\"webkit-box-orient\"); },\n            set: function (v) { this.set(\"webkit-box-orient: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitBoxPack\", {\n            get: function () { return this.get(\"webkit-box-pack\"); },\n            set: function (v) { this.set(\"webkit-box-pack: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitBoxReflect\", {\n            get: function () { return this.get(\"webkit-box-reflect\"); },\n            set: function (v) { this.set(\"webkit-box-reflect: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitBoxShadow\", {\n            get: function () { return this.get(\"webkit-box-shadow\"); },\n            set: function (v) { this.set(\"webkit-box-shadow: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitBoxSizing\", {\n            get: function () { return this.get(\"webkit-box-sizing\"); },\n            set: function (v) { this.set(\"webkit-box-sizing: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitClipPath\", {\n            get: function () { return this.get(\"webkit-clip-path\"); },\n            set: function (v) { this.set(\"webkit-clip-path: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitColumnBreakAfter\", {\n            get: function () { return this.get(\"webkit-column-break-after\"); },\n            set: function (v) { this.set(\"webkit-column-break-after: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitColumnBreakBefore\", {\n            get: function () { return this.get(\"webkit-column-break-before\"); },\n            set: function (v) { this.set(\"webkit-column-break-before: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitColumnBreakInside\", {\n            get: function () { return this.get(\"webkit-column-break-inside\"); },\n            set: function (v) { this.set(\"webkit-column-break-inside: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitColumnCount\", {\n            get: function () { return this.get(\"webkit-column-count\"); },\n            set: function (v) { this.set(\"webkit-column-count: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitColumnGap\", {\n            get: function () { return this.get(\"webkit-column-gap\"); },\n            set: function (v) { this.set(\"webkit-column-gap: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitColumnRule\", {\n            get: function () { return this.get(\"webkit-column-rule\"); },\n            set: function (v) { this.set(\"webkit-column-rule: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitColumnRuleColor\", {\n            get: function () { return this.get(\"webkit-column-rule-color\"); },\n            set: function (v) { this.set(\"webkit-column-rule-color: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitColumnRuleStyle\", {\n            get: function () { return this.get(\"webkit-column-rule-style\"); },\n            set: function (v) { this.set(\"webkit-column-rule-style: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitColumnRuleWidth\", {\n            get: function () { return this.get(\"webkit-column-rule-width\"); },\n            set: function (v) { this.set(\"webkit-column-rule-width: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitColumnSpan\", {\n            get: function () { return this.get(\"webkit-column-span\"); },\n            set: function (v) { this.set(\"webkit-column-span: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitColumnWidth\", {\n            get: function () { return this.get(\"webkit-column-width\"); },\n            set: function (v) { this.set(\"webkit-column-width: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitColumns\", {\n            get: function () { return this.get(\"webkit-columns\"); },\n            set: function (v) { this.set(\"webkit-columns: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitFilter\", {\n            get: function () { return this.get(\"webkit-filter\"); },\n            set: function (v) { this.set(\"webkit-filter: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitFlex\", {\n            get: function () { return this.get(\"webkit-flex\"); },\n            set: function (v) { this.set(\"webkit-flex: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitFlexBasis\", {\n            get: function () { return this.get(\"webkit-flex-basis\"); },\n            set: function (v) { this.set(\"webkit-flex-basis: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitFlexDirection\", {\n            get: function () { return this.get(\"webkit-flex-direction\"); },\n            set: function (v) { this.set(\"webkit-flex-direction: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitFlexFlow\", {\n            get: function () { return this.get(\"webkit-flex-flow\"); },\n            set: function (v) { this.set(\"webkit-flex-flow: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitFlexGrow\", {\n            get: function () { return this.get(\"webkit-flex-grow\"); },\n            set: function (v) { this.set(\"webkit-flex-grow: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitFlexShrink\", {\n            get: function () { return this.get(\"webkit-flex-shrink\"); },\n            set: function (v) { this.set(\"webkit-flex-shrink: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitFlexWrap\", {\n            get: function () { return this.get(\"webkit-flex-wrap\"); },\n            set: function (v) { this.set(\"webkit-flex-wrap: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitFontFeatureSettings\", {\n            get: function () { return this.get(\"webkit-font-feature-settings\"); },\n            set: function (v) { this.set(\"webkit-font-feature-settings: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitFontSmoothing\", {\n            get: function () { return this.get(\"webkit-font-smoothing\"); },\n            set: function (v) { this.set(\"webkit-font-smoothing: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitHighlight\", {\n            get: function () { return this.get(\"webkit-highlight\"); },\n            set: function (v) { this.set(\"webkit-highlight: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitHyphenateCharacter\", {\n            get: function () { return this.get(\"webkit-hyphenate-character\"); },\n            set: function (v) { this.set(\"webkit-hyphenate-character: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitJustifyContent\", {\n            get: function () { return this.get(\"webkit-justify-content\"); },\n            set: function (v) { this.set(\"webkit-justify-content: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitLineBreak\", {\n            get: function () { return this.get(\"webkit-line-break\"); },\n            set: function (v) { this.set(\"webkit-line-break: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitLineClamp\", {\n            get: function () { return this.get(\"webkit-line-clamp\"); },\n            set: function (v) { this.set(\"webkit-line-clamp: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitLocale\", {\n            get: function () { return this.get(\"webkit-locale\"); },\n            set: function (v) { this.set(\"webkit-locale: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitLogicalHeight\", {\n            get: function () { return this.get(\"webkit-logical-height\"); },\n            set: function (v) { this.set(\"webkit-logical-height: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitLogicalWidth\", {\n            get: function () { return this.get(\"webkit-logical-width\"); },\n            set: function (v) { this.set(\"webkit-logical-width: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitMarginAfter\", {\n            get: function () { return this.get(\"webkit-margin-after\"); },\n            set: function (v) { this.set(\"webkit-margin-after: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitMarginBefore\", {\n            get: function () { return this.get(\"webkit-margin-before\"); },\n            set: function (v) { this.set(\"webkit-margin-before: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitMarginEnd\", {\n            get: function () { return this.get(\"webkit-margin-end\"); },\n            set: function (v) { this.set(\"webkit-margin-end: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitMarginStart\", {\n            get: function () { return this.get(\"webkit-margin-start\"); },\n            set: function (v) { this.set(\"webkit-margin-start: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitMask\", {\n            get: function () { return this.get(\"webkit-mask\"); },\n            set: function (v) { this.set(\"webkit-mask: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitMaskBoxImage\", {\n            get: function () { return this.get(\"webkit-mask-box-image\"); },\n            set: function (v) { this.set(\"webkit-mask-box-image: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitMaskBoxImageOutset\", {\n            get: function () { return this.get(\"webkit-mask-box-image-outset\"); },\n            set: function (v) { this.set(\"webkit-mask-box-image-outset: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitMaskBoxImageRepeat\", {\n            get: function () { return this.get(\"webkit-mask-box-image-repeat\"); },\n            set: function (v) { this.set(\"webkit-mask-box-image-repeat: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitMaskBoxImageSlice\", {\n            get: function () { return this.get(\"webkit-mask-box-image-slice\"); },\n            set: function (v) { this.set(\"webkit-mask-box-image-slice: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitMaskBoxImageSource\", {\n            get: function () { return this.get(\"webkit-mask-box-image-source\"); },\n            set: function (v) { this.set(\"webkit-mask-box-image-source: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitMaskBoxImageWidth\", {\n            get: function () { return this.get(\"webkit-mask-box-image-width\"); },\n            set: function (v) { this.set(\"webkit-mask-box-image-width: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitMaskClip\", {\n            get: function () { return this.get(\"webkit-mask-clip\"); },\n            set: function (v) { this.set(\"webkit-mask-clip: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitMaskComposite\", {\n            get: function () { return this.get(\"webkit-mask-composite\"); },\n            set: function (v) { this.set(\"webkit-mask-composite: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitMaskImage\", {\n            get: function () { return this.get(\"webkit-mask-image\"); },\n            set: function (v) { this.set(\"webkit-mask-image: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitMaskOrigin\", {\n            get: function () { return this.get(\"webkit-mask-origin\"); },\n            set: function (v) { this.set(\"webkit-mask-origin: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitMaskPosition\", {\n            get: function () { return this.get(\"webkit-mask-position\"); },\n            set: function (v) { this.set(\"webkit-mask-position: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitMaskPositionX\", {\n            get: function () { return this.get(\"webkit-mask-position-x\"); },\n            set: function (v) { this.set(\"webkit-mask-position-x: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitMaskPositionY\", {\n            get: function () { return this.get(\"webkit-mask-position-y\"); },\n            set: function (v) { this.set(\"webkit-mask-position-y: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitMaskRepeat\", {\n            get: function () { return this.get(\"webkit-mask-repeat\"); },\n            set: function (v) { this.set(\"webkit-mask-repeat: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitMaskRepeatX\", {\n            get: function () { return this.get(\"webkit-mask-repeat-x\"); },\n            set: function (v) { this.set(\"webkit-mask-repeat-x: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitMaskRepeatY\", {\n            get: function () { return this.get(\"webkit-mask-repeat-y\"); },\n            set: function (v) { this.set(\"webkit-mask-repeat-y: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitMaskSize\", {\n            get: function () { return this.get(\"webkit-mask-size\"); },\n            set: function (v) { this.set(\"webkit-mask-size: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitMaxLogicalHeight\", {\n            get: function () { return this.get(\"webkit-max-logical-height\"); },\n            set: function (v) { this.set(\"webkit-max-logical-height: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitMaxLogicalWidth\", {\n            get: function () { return this.get(\"webkit-max-logical-width\"); },\n            set: function (v) { this.set(\"webkit-max-logical-width: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitMinLogicalHeight\", {\n            get: function () { return this.get(\"webkit-min-logical-height\"); },\n            set: function (v) { this.set(\"webkit-min-logical-height: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitMinLogicalWidth\", {\n            get: function () { return this.get(\"webkit-min-logical-width\"); },\n            set: function (v) { this.set(\"webkit-min-logical-width: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitOpacity\", {\n            get: function () { return this.get(\"webkit-opacity\"); },\n            set: function (v) { this.set(\"webkit-opacity: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitOrder\", {\n            get: function () { return this.get(\"webkit-order\"); },\n            set: function (v) { this.set(\"webkit-order: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitPaddingAfter\", {\n            get: function () { return this.get(\"webkit-padding-after\"); },\n            set: function (v) { this.set(\"webkit-padding-after: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitPaddingBefore\", {\n            get: function () { return this.get(\"webkit-padding-before\"); },\n            set: function (v) { this.set(\"webkit-padding-before: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitPaddingEnd\", {\n            get: function () { return this.get(\"webkit-padding-end\"); },\n            set: function (v) { this.set(\"webkit-padding-end: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitPaddingStart\", {\n            get: function () { return this.get(\"webkit-padding-start\"); },\n            set: function (v) { this.set(\"webkit-padding-start: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitPerspective\", {\n            get: function () { return this.get(\"webkit-perspective\"); },\n            set: function (v) { this.set(\"webkit-perspective: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitPerspectiveOrigin\", {\n            get: function () { return this.get(\"webkit-perspective-origin\"); },\n            set: function (v) { this.set(\"webkit-perspective-origin: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitPerspectiveOriginX\", {\n            get: function () { return this.get(\"webkit-perspective-origin-x\"); },\n            set: function (v) { this.set(\"webkit-perspective-origin-x: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitPerspectiveOriginY\", {\n            get: function () { return this.get(\"webkit-perspective-origin-y\"); },\n            set: function (v) { this.set(\"webkit-perspective-origin-y: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitPrintColorAdjust\", {\n            get: function () { return this.get(\"webkit-print-color-adjust\"); },\n            set: function (v) { this.set(\"webkit-print-color-adjust: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitRtlOrdering\", {\n            get: function () { return this.get(\"webkit-rtl-ordering\"); },\n            set: function (v) { this.set(\"webkit-rtl-ordering: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitRubyPosition\", {\n            get: function () { return this.get(\"webkit-ruby-position\"); },\n            set: function (v) { this.set(\"webkit-ruby-position: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitShapeImageThreshold\", {\n            get: function () { return this.get(\"webkit-shape-image-threshold\"); },\n            set: function (v) { this.set(\"webkit-shape-image-threshold: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitShapeMargin\", {\n            get: function () { return this.get(\"webkit-shape-margin\"); },\n            set: function (v) { this.set(\"webkit-shape-margin: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitShapeOutside\", {\n            get: function () { return this.get(\"webkit-shape-outside\"); },\n            set: function (v) { this.set(\"webkit-shape-outside: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitTapHighlightColor\", {\n            get: function () { return this.get(\"webkit-tap-highlight-color\"); },\n            set: function (v) { this.set(\"webkit-tap-highlight-color: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitTextCombine\", {\n            get: function () { return this.get(\"webkit-text-combine\"); },\n            set: function (v) { this.set(\"webkit-text-combine: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitTextDecorationsInEffect\", {\n            get: function () { return this.get(\"webkit-text-decorations-in-effect\"); },\n            set: function (v) { this.set(\"webkit-text-decorations-in-effect: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitTextEmphasis\", {\n            get: function () { return this.get(\"webkit-text-emphasis\"); },\n            set: function (v) { this.set(\"webkit-text-emphasis: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitTextEmphasisColor\", {\n            get: function () { return this.get(\"webkit-text-emphasis-color\"); },\n            set: function (v) { this.set(\"webkit-text-emphasis-color: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitTextEmphasisPosition\", {\n            get: function () { return this.get(\"webkit-text-emphasis-position\"); },\n            set: function (v) { this.set(\"webkit-text-emphasis-position: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitTextEmphasisStyle\", {\n            get: function () { return this.get(\"webkit-text-emphasis-style\"); },\n            set: function (v) { this.set(\"webkit-text-emphasis-style: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitTextFillColor\", {\n            get: function () { return this.get(\"webkit-text-fill-color\"); },\n            set: function (v) { this.set(\"webkit-text-fill-color: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitTextOrientation\", {\n            get: function () { return this.get(\"webkit-text-orientation\"); },\n            set: function (v) { this.set(\"webkit-text-orientation: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitTextSecurity\", {\n            get: function () { return this.get(\"webkit-text-security\"); },\n            set: function (v) { this.set(\"webkit-text-security: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitTextSizeAdjust\", {\n            get: function () { return this.get(\"webkit-text-size-adjust\"); },\n            set: function (v) { this.set(\"webkit-text-size-adjust: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitTextStroke\", {\n            get: function () { return this.get(\"webkit-text-stroke\"); },\n            set: function (v) { this.set(\"webkit-text-stroke: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitTextStrokeColor\", {\n            get: function () { return this.get(\"webkit-text-stroke-color\"); },\n            set: function (v) { this.set(\"webkit-text-stroke-color: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitTextStrokeWidth\", {\n            get: function () { return this.get(\"webkit-text-stroke-width\"); },\n            set: function (v) { this.set(\"webkit-text-stroke-width: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitTransform\", {\n            get: function () { return this.get(\"webkit-transform\"); },\n            set: function (v) { this.set(\"webkit-transform: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitTransformOrigin\", {\n            get: function () { return this.get(\"webkit-transform-origin\"); },\n            set: function (v) { this.set(\"webkit-transform-origin: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitTransformOriginX\", {\n            get: function () { return this.get(\"webkit-transform-origin-x\"); },\n            set: function (v) { this.set(\"webkit-transform-origin-x: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitTransformOriginY\", {\n            get: function () { return this.get(\"webkit-transform-origin-y\"); },\n            set: function (v) { this.set(\"webkit-transform-origin-y: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitTransformOriginZ\", {\n            get: function () { return this.get(\"webkit-transform-origin-z\"); },\n            set: function (v) { this.set(\"webkit-transform-origin-z: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitTransformStyle\", {\n            get: function () { return this.get(\"webkit-transform-style\"); },\n            set: function (v) { this.set(\"webkit-transform-style: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitTransition\", {\n            get: function () { return this.get(\"webkit-transition\"); },\n            set: function (v) { this.set(\"webkit-transition: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitTransitionDelay\", {\n            get: function () { return this.get(\"webkit-transition-delay\"); },\n            set: function (v) { this.set(\"webkit-transition-delay: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitTransitionDuration\", {\n            get: function () { return this.get(\"webkit-transition-duration\"); },\n            set: function (v) { this.set(\"webkit-transition-duration: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitTransitionProperty\", {\n            get: function () { return this.get(\"webkit-transition-property\"); },\n            set: function (v) { this.set(\"webkit-transition-property: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitTransitionTimingFunction\", {\n            get: function () { return this.get(\"webkit-transition-timing-function\"); },\n            set: function (v) { this.set(\"webkit-transition-timing-function: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitUserDrag\", {\n            get: function () { return this.get(\"webkit-user-drag\"); },\n            set: function (v) { this.set(\"webkit-user-drag: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitUserModify\", {\n            get: function () { return this.get(\"webkit-user-modify\"); },\n            set: function (v) { this.set(\"webkit-user-modify: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitUserSelect\", {\n            get: function () { return this.get(\"webkit-user-select\"); },\n            set: function (v) { this.set(\"webkit-user-select: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"webkitWritingMode\", {\n            get: function () { return this.get(\"webkit-writing-mode\"); },\n            set: function (v) { this.set(\"webkit-writing-mode: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"whiteSpace\", {\n            get: function () { return this.get(\"white-space\"); },\n            set: function (v) { this.set(\"white-space: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"widows\", {\n            get: function () { return this.get(\"widows\"); },\n            set: function (v) { this.set(\"widows: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"width\", {\n            get: function () { return this.get(\"width\"); },\n            set: function (v) { this.set(\"width: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"willChange\", {\n            get: function () { return this.get(\"will-change\"); },\n            set: function (v) { this.set(\"will-change: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"wordBreak\", {\n            get: function () { return this.get(\"word-break\"); },\n            set: function (v) { this.set(\"word-break: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"wordSpacing\", {\n            get: function () { return this.get(\"word-spacing\"); },\n            set: function (v) { this.set(\"word-spacing: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"wordWrap\", {\n            get: function () { return this.get(\"word-wrap\"); },\n            set: function (v) { this.set(\"word-wrap: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"writingMode\", {\n            get: function () { return this.get(\"writing-mode\"); },\n            set: function (v) { this.set(\"writing-mode: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"x\", {\n            get: function () { return this.get(\"x\"); },\n            set: function (v) { this.set(\"x: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"y\", {\n            get: function () { return this.get(\"y\"); },\n            set: function (v) { this.set(\"y: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"zIndex\", {\n            get: function () { return this.get(\"z-index\"); },\n            set: function (v) { this.set(\"z-index: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        ;\n        Object.defineProperty(StyleDeclaration.prototype, \"zoom\", {\n            get: function () { return this.get(\"zoom\"); },\n            set: function (v) { this.set(\"zoom: \" + v); },\n            enumerable: false,\n            configurable: true\n        });\n        StyleDeclaration.prototype.get = function (prop) {\n            return this.computedStyleObj[prop];\n        };\n        StyleDeclaration.prototype.set = function (style) {\n            this.element.setStyle(style);\n        };\n        Object.defineProperty(StyleDeclaration.prototype, \"computedStyleObj\", {\n            get: function () {\n                var _this = this;\n                if (this.element.style !== this.lastStyle) {\n                    this._computedStyleObj = {};\n                    this.element.style.split(/;\\s*/g).forEach(function (s) {\n                        var p = s.match(/([a-z]+(?:\\-[a-z]+)*):\\s*(.+)/);\n                        _this._computedStyleObj[p[1]] = p[2];\n                    });\n                }\n                return this._computedStyleObj;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        return StyleDeclaration;\n    }());\n    // #Element\n    var Element = /** @class */ (function () {\n        /** Given a transformer function, sort an array of elements which will become it's new children. */\n        // Too hard to implement\t\t\n        // reorder(callback: (elements: (DestructibleElement)[]) => {}) {\n        // }\n        function Element(isNew, id) {\n            this.props = {};\n            this._lastouterHTML = \"\";\n            this.id = id;\n            //wtf\n            Object.defineProperty(this, \"styleDeclaration\", {\n                value: new StyleDeclaration(this),\n                enumerable: false\n            });\n        }\n        Object.defineProperty(Element.prototype, \"outerHTMLTree\", {\n            get: function () {\n                if (this._lastouterHTML === this.outerHTML) {\n                    return this._outerHTMLTree;\n                }\n                else {\n                    this._lastouterHTML = this.outerHTML;\n                    this._outerHTMLTree = parser.tree(this.outerHTML)[0];\n                    return this._outerHTMLTree;\n                }\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(Element.prototype, \"childElementCount\", {\n            /**\n             * Returns children count\n             * Use this over Element.children.length!! children.length re-parses the html which is heavy on the client!\n             */\n            get: function () {\n                return parseInt(this.getAttribute(\"childElementCount\"));\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(Element.prototype, \"className\", {\n            get: function () {\n                return this.getAttribute(\"className\");\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(Element.prototype, \"childrenRaw\", {\n            /** array of elements. can include a Node if the child's id is not provided. Use .children instead to filter out id-less nodes */\n            get: function () {\n                return this.outerHTMLTree.children.map(function (e) { return e.attributes.id ? get(e.attributes.id, \"container\") : e; });\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(Element.prototype, \"children\", {\n            /** array of elements, id-less nodes are ignored. */\n            get: function () {\n                return this.childrenRaw.filter(function (e) { return \"id\" in e; });\n            },\n            enumerable: false,\n            configurable: true\n        });\n        /**\n         * Adds event listener; Equivalent to onEvent(element.id, eventName, callback);\n         */\n        Element.prototype.on = function (t, callback) {\n            onEvent(this.id, t, callback);\n        };\n        /** setStyle; equivalent to setStyle(element.id, style) */\n        Element.prototype.setStyle = function (style) {\n            setStyle(this.id, style);\n        };\n        Object.defineProperty(Element.prototype, \"backgroundColor\", {\n            get: function () {\n                return getProperty(this.id, \"background-color\");\n            },\n            /** background color */\n            set: function (color) {\n                setProperty(this.id, \"background-color\", color);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(Element.prototype, \"tagName\", {\n            /** element tag name; ex: DIV | BUTTON | IMG */\n            get: function () {\n                return this.getAttribute(\"tagName\");\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(Element.prototype, \"style\", {\n            get: function () {\n                return this.outerHTMLTree.attributes.style || \"\";\n            },\n            /**\n             * Resetting the style will not overwrite all styles, you must know which are currently active and do \"style: unset;\" in order to reset\n             */\n            set: function (style) {\n                this.setStyle(style);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(Element.prototype, \"outerHTML\", {\n            /** includes the element itself ex: <div id=\"ELEMENTID\"><div id = \"CHILD\">HI</div></div> */\n            get: function () {\n                return this.getAttribute(\"outerHTML\");\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(Element.prototype, \"innerHTML\", {\n            /** includes only the children of the element ex: <div id = \"CHILD\">HI</div> */\n            get: function () {\n                return this.getAttribute(\"innerHTML\");\n            },\n            set: function (innerhtml) {\n                innerHTML(this.id, innerhtml);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(Element.prototype, \"scrollHeight\", {\n            /** Height of element, includes parts that are hidden beyond the scroll bar */\n            get: function () {\n                return getAttribute(this.id, \"scrollHeight\");\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(Element.prototype, \"scrollTop\", {\n            /** Location of scroll bar */\n            get: function () {\n                return parseInt(getAttribute(this.id, \"scrollTop\"));\n            },\n            set: function (y) {\n                setAttribute(this.id, \"scrollTop\", y);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(Element.prototype, \"borderWidth\", {\n            /** CSS border width */\n            get: function () {\n                return getProperty(this.id, \"border-width\");\n            },\n            set: function (value) {\n                setProperty(this.id, \"border-width\", value);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(Element.prototype, \"borderColor\", {\n            /** CSS border color */\n            get: function () {\n                return getProperty(this.id, \"border-color\");\n            },\n            set: function (value) {\n                setProperty(this.id, \"border-color\", value);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(Element.prototype, \"display\", {\n            /** CSS display; to get the current value do element.styleDeclaration.display */\n            set: function (display) {\n                this.setStyle(\"display: \" + display);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(Element.prototype, \"padding\", {\n            /** CSS padding; element.styleDeclaration.padding */\n            set: function (value) {\n                this.setStyle(\"padding: \" + (typeof value === \"number\" ? value + \"px\" : value));\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(Element.prototype, \"margin\", {\n            /** CSS margin; element.styleDeclaration.margin */\n            set: function (value) {\n                this.setStyle(\"margin: \" + (typeof value === \"number\" ? value + \"px\" : value));\n            },\n            enumerable: false,\n            configurable: true\n        });\n        /**\n         * Returns toString()'d representation of the attribute value.\n         */\n        Element.prototype.getAttribute = function (attribute) {\n            return getAttribute(this.id, attribute);\n        };\n        Element.prototype.setAttribute = function (attribute, value) {\n            return setAttribute(this.id, attribute, value);\n        };\n        Object.defineProperty(Element.prototype, \"firstChild\", {\n            //first child, id-less ignored\n            get: function () {\n                if (this.children[0]) {\n                    return this.children[0];\n                }\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Element.prototype.addChildren = function () {\n            var children = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                children[_i] = arguments[_i];\n            }\n            if (Array.isArray(children[0])) {\n                children = children[0];\n            }\n            for (var _a = 0, _b = children; _a < _b.length; _a++) {\n                var child = _b[_a];\n                child.parent = this;\n            }\n        };\n        Object.defineProperty(Element.prototype, \"elementInit\", {\n            set: function (callback) {\n                callback(this);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        /** To be called after all props are set  */\n        Element.prototype.afterPropsSet = function () {\n        };\n        return Element;\n    }());\n    Nomx.Element = Element;\n    // #Element\n    var DestructibleElement = /** @class */ (function (_super) {\n        __extends(DestructibleElement, _super);\n        function DestructibleElement() {\n            var _this = _super !== null && _super.apply(this, arguments) || this;\n            _this.props = {};\n            return _this;\n        }\n        Object.defineProperty(DestructibleElement.prototype, \"parent\", {\n            get: function () {\n                return this._parent;\n            },\n            set: function (parent) {\n                if (!parent) {\n                    parent = limbo;\n                }\n                ;\n                setParent(this.id, parent.id);\n                this._parent = parent;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(DestructibleElement.prototype, \"width\", {\n            get: function () {\n                return getProperty(this.id, \"width\");\n            },\n            set: function (value) {\n                setProperty(this.id, \"width\", value);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(DestructibleElement.prototype, \"height\", {\n            get: function () {\n                return getProperty(this.id, \"height\");\n            },\n            set: function (value) {\n                setProperty(this.id, \"height\", value);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(DestructibleElement.prototype, \"position\", {\n            set: function (position) {\n                this.setStyle(\"position: \" + position);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(DestructibleElement.prototype, \"left\", {\n            /** distance from the left side of the parent element */\n            set: function (value) {\n                this.setStyle(\"left: \" + (typeof value === \"number\" ? value + \"px\" : value));\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(DestructibleElement.prototype, \"right\", {\n            /** distance from the right side of the parent element */\n            set: function (value) {\n                this.setStyle(\"right: \" + (typeof value === \"number\" ? value + \"px\" : value));\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(DestructibleElement.prototype, \"top\", {\n            /** distance from the top side of the parent element */\n            set: function (value) {\n                this.setStyle(\"top: \" + (typeof value === \"number\" ? value + \"px\" : value));\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(DestructibleElement.prototype, \"bottom\", {\n            /** distance from the bottom side of the parent element */\n            set: function (value) {\n                this.setStyle(\"bottom: \" + (typeof value === \"number\" ? value + \"px\" : value));\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(DestructibleElement.prototype, \"x\", {\n            /** (mostly) equivalent to .left, except called via setProperty */\n            get: function () {\n                return getProperty(this.id, \"x\");\n            },\n            set: function (value) {\n                setProperty(this.id, \"x\", value);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(DestructibleElement.prototype, \"y\", {\n            /** (mostly) equivalent to .top, except called via setProperty */\n            get: function () {\n                return getProperty(this.id, \"y\");\n            },\n            set: function (value) {\n                setProperty(this.id, \"y\", value);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        DestructibleElement.prototype.delete = function () {\n            deleteElement(this.id);\n        };\n        return DestructibleElement;\n    }(Element));\n    Nomx.DestructibleElement = DestructibleElement;\n    var TextElement = /** @class */ (function (_super) {\n        __extends(TextElement, _super);\n        function TextElement() {\n            var _this = _super !== null && _super.apply(this, arguments) || this;\n            _this.props = {};\n            return _this;\n        }\n        Object.defineProperty(TextElement.prototype, \"textColor\", {\n            get: function () {\n                return getProperty(this.id, \"text-color\");\n            },\n            set: function (color) {\n                setProperty(this.id, \"text-color\", color);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(TextElement.prototype, \"text\", {\n            get: function () {\n                return getProperty(this.id, \"text\");\n            },\n            /**\n             * Text of element (escapes html, use innerHTML instead)\n             */\n            set: function (text) {\n                setProperty(this.id, \"text\", text);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(TextElement.prototype, \"fontSize\", {\n            get: function () {\n                return getProperty(this.id, \"font-size\");\n            },\n            /** font size in pixels */\n            set: function (size) {\n                setProperty(this.id, \"font-size\", size);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(TextElement.prototype, \"overflow\", {\n            // ill add types i need as they come\n            set: function (overflow) {\n                this.setStyle(\"overflow: \" + overflow);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        return TextElement;\n    }(DestructibleElement));\n    Nomx.TextElement = TextElement;\n    var Label = /** @class */ (function (_super) {\n        __extends(Label, _super);\n        function Label(isNew, id) {\n            var _this = _super.call(this, isNew, id) || this;\n            if (isNew) {\n                textLabel(id, \"\");\n            }\n            return _this;\n        }\n        return Label;\n    }(TextElement));\n    Nomx.Label = Label;\n    var Button = /** @class */ (function (_super) {\n        __extends(Button, _super);\n        function Button(isNew, id) {\n            var _this = _super.call(this, isNew, id) || this;\n            _this.props = {};\n            _this.onClick = function (event) { };\n            if (isNew) {\n                button(id, \"\");\n            }\n            _this.on(\"click\", function (event) {\n                _this.onClick(event);\n            });\n            return _this;\n        }\n        Object.defineProperty(Button.prototype, \"pure\", {\n            set: function (v) {\n                this.setStyle(\"border: 0px; background-image: none; margin: 0px; border-radius: 0px\");\n            },\n            enumerable: false,\n            configurable: true\n        });\n        return Button;\n    }(TextElement));\n    Nomx.Button = Button;\n    var RippleButton = /** @class */ (function (_super) {\n        __extends(RippleButton, _super);\n        function RippleButton(isNew, id) {\n            var _this = _super.call(this, isNew, id) || this;\n            _this.props = {};\n            _this.ripples = [];\n            _this.color = \"#FFF\";\n            _this.shadow = false;\n            _this.textElement = Nomx.create(\"container\", { parent: _this });\n            _this.setStyle(\"transition: box-shadow .3s; overflow: hidden\");\n            _this.on(\"mouseout\", function () {\n                if (_this.shadow) {\n                    _this.setStyle(\"box-shadow: none\");\n                }\n                var ripples = _this.ripples;\n                setTimeout(function () {\n                    ripples.forEach(function (ripple) {\n                        ripple.setStyle(\"opacity: 0\");\n                        setTimeout(function () {\n                            ripple.delete();\n                        }, 1000);\n                    });\n                }, 50);\n                _this.ripples = [];\n            });\n            _this.on(\"mouseup\", function () {\n                if (_this.shadow) {\n                    _this.setStyle(\"box-shadow: none\");\n                }\n                var ripples = _this.ripples;\n                setTimeout(function () {\n                    ripples.forEach(function (ripple) {\n                        ripple.setStyle(\"opacity: 0\");\n                        setTimeout(function () {\n                            ripple.delete();\n                        }, 1000);\n                    });\n                }, 50);\n                _this.ripples = [];\n            });\n            _this.on(\"mousedown\", function (event) {\n                if (_this.shadow) {\n                    _this.setStyle(\"box-shadow: rgb(0 0 0 / 20%) 0px 3px 3px -2px, rgb(0 0 0 / 14%) 0px 3px 4px 0px, rgb(0 0 0 / 12%) 0px 1px 8px 0px\");\n                }\n                var ripple = Nomx.create(\"container\", { parent: _this });\n                ripple.setStyle(\"pointer-events: none;opacity: 80%;transition: opacity 1s, width 1.5s, height 1.5s;transform: translate(-50%, -50%);width: 1px; height:1px; border-radius: 1000px;position: absolute\");\n                _this.ripples.push(ripple);\n                ripple.x = event.offsetX;\n                ripple.y = event.offsetY;\n                setTimeout(function () { ripple.setStyle(\"opacity: 40%;width: 800px; height:800px\"); }, 50);\n                ripple.backgroundColor = _this.color;\n            });\n            return _this;\n        }\n        Object.defineProperty(RippleButton.prototype, \"text\", {\n            get: function () {\n                return this.textElement.text;\n            },\n            /**\n             * Proxied text; html is escaped; use rippleButton.textElement.innerHTML if you are trying to set html\n             */\n            set: function (value) {\n                this.textElement.text = value;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        return RippleButton;\n    }(Button));\n    Nomx.RippleButton = RippleButton;\n    /** Textbox */\n    var Input = /** @class */ (function (_super) {\n        __extends(Input, _super);\n        function Input(isNew, id) {\n            var _this = _super.call(this, isNew, id) || this;\n            _this.props = {};\n            _this.onSubmit = function (event) { };\n            if (isNew) {\n                textInput(id, \"\");\n            }\n            _this.on(\"keypress\", function (event) {\n                if (event.keyCode === 13) {\n                    _this.onSubmit(event);\n                }\n            });\n            return _this;\n        }\n        return Input;\n    }(TextElement));\n    Nomx.Input = Input;\n    /** Container. aka <div>\n     * Css may be different. For example there is line-height set to 18px\n     */\n    var Container = /** @class */ (function (_super) {\n        __extends(Container, _super);\n        function Container(isNew, id) {\n            var _this = _super.call(this, isNew, id) || this;\n            _this.props = {};\n            if (isNew) {\n                container(id, \"\");\n            }\n            return _this;\n        }\n        Object.defineProperty(Container.prototype, \"type\", {\n            /** Determines subset type of container */\n            set: function (value) {\n                switch (value) {\n                    case \"fill\":\n                        this.setStyle(\"width: 100%; height: 100%; position: absolute\");\n                        break;\n                }\n            },\n            enumerable: false,\n            configurable: true\n        });\n        return Container;\n    }(TextElement));\n    Nomx.Container = Container;\n    /** Represents a screen */\n    var Screen = /** @class */ (function (_super) {\n        __extends(Screen, _super);\n        function Screen(isNew, id, children) {\n            var _this = _super.call(this, isNew, id) || this;\n            if (isNew) {\n                Nomx.root.innerHTML += \"<div class=\\\"screen\\\" tabindex=\\\"1\\\" data-theme=\\\"default\\\" id=\\\"\" + id + \"\\\" style=\\\"display: none; height: 450px; width: 320px; left: 0px; top: 0px; position: absolute; z-index: 0; background-color: rgb(255, 255, 255);\\\"></div>\";\n            }\n            return _this;\n        }\n        Object.defineProperty(Screen.prototype, \"isActiveScreen\", {\n            get: function () {\n                return this.style.match(\"display: none\") !== null;\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Screen.prototype.set = function () {\n            setScreen(this.id);\n        };\n        return Screen;\n    }(TextElement));\n    Nomx.Screen = Screen;\n    /** For when you want to pass a string as an Element */\n    var Span = /** @class */ (function (_super) {\n        __extends(Span, _super);\n        function Span(isNew, id) {\n            var _this = _super.call(this, isNew, id) || this;\n            _this.style = \"display: inline; padding: 0px\";\n            return _this;\n        }\n        return Span;\n    }(Container));\n    Nomx.Span = Span;\n    /** Represents a line break */\n    var Break = /** @class */ (function (_super) {\n        __extends(Break, _super);\n        function Break(isNew, id) {\n            var _this = _super.call(this, isNew, id) || this;\n            _this.style = \"margin-bottom: 10px\";\n            return _this;\n        }\n        /** This will error */\n        Break.prototype.addChildren = function () {\n            throw \"Line breaks can't have children, silly.\";\n        };\n        return Break;\n    }(Container));\n    Nomx.Break = Break;\n    /** singleton class that represents divApplab */\n    var Root = /** @class */ (function (_super) {\n        __extends(Root, _super);\n        function Root() {\n            var _this = _super !== null && _super.apply(this, arguments) || this;\n            _this.id = \"divApplab\";\n            return _this;\n        }\n        Object.defineProperty(Root.prototype, \"nodes\", {\n            /** Every element (that has an id) in the app (Computationally expensive, best you use caches) */\n            get: function () {\n                return parser.nodes(this.innerHTML);\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(Root.prototype, \"screens\", {\n            /** Returns every screen. (Computationally expensive, best you use caches) */\n            get: function () {\n                return this.children.filter(function (c) {\n                    return c.className === \"screen\";\n                });\n            },\n            enumerable: false,\n            configurable: true\n        });\n        Object.defineProperty(Root.prototype, \"activeScreen\", {\n            /** Returns current screen. (Computationally expensive, best you use caches) */\n            get: function () {\n                return this.children.filter(function (c) {\n                    return c.className === \"screen\" && c.style.match(\"display: none\");\n                })[0];\n            },\n            enumerable: false,\n            configurable: true\n        });\n        return Root;\n    }(Element));\n    Nomx.Root = Root;\n    var allIndex = {\n        div: Container,\n        br: Break,\n        label: Label,\n        button: Button,\n        input: Input,\n        screen: Screen,\n        container: Container,\n        span: Span,\n        element: Element,\n        root: Root,\n        ripplebutton: RippleButton,\n    };\n    function _instanceof(a, b) {\n        //a instanceof b results in {data: false, type: \"boolean\"} when it's false, and true when it's true; really stupid and annoying\n        return a instanceof b === true;\n    }\n    /**\n     * Should only be used when you aren't using cdo-sync's class extension\n     */\n    function extendClass(C, constructor, props, methods) {\n        var Extension = /** @class */ (function (_super) {\n            __extends(Extension, _super);\n            function Extension(isNew, id, children) {\n                var _this = _super.call(this, isNew, id) || this;\n                constructor.call(_this, isNew, id, children);\n                return _this;\n            }\n            return Extension;\n        }(C));\n        ;\n        Object.defineProperties(Extension, props);\n        var proto = Extension.prototype;\n        for (var method in methods) {\n            proto[method] = methods[method];\n        }\n    }\n    Nomx.extendClass = extendClass;\n    //\texport function create<e extends keyof creatableTypes>(ElementType: e, props?: convertClassToProps<creatableTypes[e]>, children?: CreateChildren[]): InstanceType<creatableTypes[e]>\n    //\texport function create<e extends creatableTypes[keyof creatableTypes]>(ElementType: e, props?: convertClassToProps<e>, children?: CreateChildren[]): InstanceType<e>\t\n    function create(ElementType, props) {\n        var children = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            children[_i - 2] = arguments[_i];\n        }\n        var elementId;\n        if (props == undefined) {\n            props = {};\n        }\n        else if (props.id) {\n            elementId = props.id;\n            delete props.id;\n        }\n        if (!elementId) {\n            elementId = prefix + (++counter).toString();\n        }\n        var computedChildren = [];\n        if (children.length === 1 && typeof children[0] === \"string\") {\n            props.text = children[0];\n        }\n        else {\n            function spread(arr) {\n                for (var _i = 0, arr_1 = arr; _i < arr_1.length; _i++) {\n                    var val = arr_1[_i];\n                    if (Array.isArray(val)) {\n                        spread(val);\n                    }\n                    else if (_instanceof(val, DestructibleElement)) {\n                        computedChildren.push(val);\n                    }\n                    else {\n                        computedChildren.push(Nomx.create(\"span\", {\n                            text: String(val)\n                        }));\n                    }\n                }\n            }\n            spread(children);\n        }\n        var element;\n        //children: [DestructibleElement | string]\n        if (typeof ElementType === \"string\") {\n            element = new allIndex[ElementType](true, elementId);\n        }\n        else {\n            element = new ElementType(true, elementId);\n        }\n        Nomx.ElementsById[element.id] = element;\n        element.addChildren(computedChildren);\n        Object.keys(props).map(function (key) {\n            element[key] = props[key];\n        });\n        element.afterPropsSet();\n        return element;\n    }\n    Nomx.create = create;\n    function get(id, ElementType) {\n        if (ElementType === void 0) { ElementType = Container; }\n        if (Nomx.ElementsById[id]) {\n            return Nomx.ElementsById[id];\n        }\n        else if (typeof ElementType === \"string\") {\n            return new allIndex[ElementType](false, id, []);\n        }\n        else {\n            return new ElementType(false, id, []);\n        }\n    }\n    Nomx.get = get;\n    /** Represents divApplab; of which all elements **must** be parented to. */\n    Nomx.root = Nomx.get(\"divApplab\", Root);\n    var uninitiatedIds = [];\n    Nomx.root.nodes.forEach(function (el) {\n        if (el.attributes.id !== \"designModeViz\") {\n            var elType = void 0;\n            if (el.attributes.class === \"screen\") {\n                elType = \"screen\";\n            }\n            else if (el.tagName === \"button\") {\n                elType = \"button\";\n            }\n            else if (el.tagName === \"input\") {\n                elType = \"input\";\n            }\n            else if (el.tagName === \"div\") {\n                elType = \"container\";\n            }\n            else if (el.tagName === \"span\") {\n                elType = \"span\";\n            }\n            else if (el.tagName === \"label\") {\n                elType = \"label\";\n            }\n            else {\n                elType = \"container\";\n            }\n            var dt = el.attributes.id.match(/^([a-zA-Z0-9\\_\\-]+)(?:\\#([a-zA-Z0-9_\\$]+))?$/);\n            if (dt) {\n                if (dt[2]) {\n                    elType = dt[2];\n                }\n                if (elType in allIndex) {\n                    window[\"$$\" + dt[1]] = Nomx.get(dt[0], elType);\n                }\n                else {\n                    uninitiatedIds.push(dt);\n                }\n            }\n        }\n    });\n    if (uninitiatedIds.length > 0) {\n        console.log(\"Custom classes detected!; Make sure to call Nomx.initiateWithClasses() after class declarations.\");\n    }\n    /**\n     * Call after you have declared your classes in global scope!\n     */\n    function initiateWithClasses() {\n        uninitiatedIds.forEach(function (_a) {\n            var id = _a[0], rid = _a[1], c = _a[2];\n            window[\"$$\" + rid] = Nomx.get(id, window[c]);\n        });\n    }\n    Nomx.initiateWithClasses = initiateWithClasses;\n    /** URL of the current app */\n    Nomx.baseURI = Nomx.root.getAttribute(\"baseURI\");\n    /** Channel id of the current app */\n    Nomx.channelId = Nomx.baseURI.match(/code.org\\/projects\\/applab\\/([^\\/]+)/)[1];\n    /** A container that elements created using innerHTML are created, in order to prevent overwriting any existing elements */\n    var forge = create(\"container\");\n    forge.display = \"none\";\n    forge.parent = Nomx.root;\n    /** A container elements go to when they are hidden but not necessarily destroyed */\n    var limbo = create(\"container\");\n    limbo.display = \"none\";\n    limbo.parent = Nomx.root;\n})(Nomx || (Nomx = {}));\n",
 "html": "<div id=\"designModeViz\" class=\"appModern\" tabindex=\"1\" data-radium=\"true\"\n\tstyle=\"display: none; width: 320px; height: 450px;\">\n\t<div class=\"screen\" tabindex=\"1\" data-theme=\"default\" id=\"loginScreen\"\n\t\tstyle=\"display: block; height: 450px; width: 320px; left: 0px; top: 0px; position: absolute; z-index: 0; background-color: rgb(255, 255, 255);\">\n\t\t<!--Forces code.org to stop auto-converting #designModeViz > .screen > div elements to textareas-->\n\t\t<div style=\"position: absolute; border: 0px; padding: 0px\" id=\"htmlmain\">\n\t\t</div>\n\t</div>\n</div>",
 "animations": {},
 "generatedProperties": {},
 "libraries": []
}